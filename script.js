// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
const sgValues = {
    'I': 0.8, 'II': 1.2, 'III': 1.8, 'IV': 2.4,
    'V': 3.2, 'VI': 4.0, 'VII': 5.6, 'VIII': 7.0
};

const mapUrls = {
    'main': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/karta1.jpg',
    'krym': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/karta2.jpg',
    'sakhalin': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/karta3.jpg'
};

const roofImages = {
    'single_slope': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/1_–û–¥–Ω–æ—Å–∫–∞—Ç–Ω–∞—è.png',
    'pitched': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/2_–î–≤—É—Å–∫–∞—Ç–Ω–∞—è.png',
    'arched': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/3_–°–≤–æ–¥—á–∞—Ç–∞—è.png',
    'pointed': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/4_–°—Ç—Ä–µ–ª—å—á–∞—Ç–∞—è.png',
    'lantern': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/5_–° —Ñ–æ–Ω–∞—Ä—è–º–∏.png',
    'long_lantern': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/6_–° –ø—Ä–æ–¥–æ–ª—å–Ω—ã–º–∏ —Ñ–æ–Ω–∞—Ä—è–º–∏.png',
    'shed': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/7_–®–µ–¥–æ–≤—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è.png',
    'multi_pitched': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/8_–ú–Ω–æ–≥–æ–ø—Ä–æ–ª—ë—Ç–Ω—ã–µ –¥–≤—É—Å–∫–∞—Ç–Ω—ã–µ.png',
    'multi_arched': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/9_–ú–Ω–æ–≥–æ–ø—Ä–æ–ª—ë—Ç–Ω—ã–µ —Å–≤–æ–¥—á–∞—Ç—ã–µ.png',
    'multi_lantern': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/10_–ú–Ω–æ–≥–æ–ø—Ä–æ–ª—ë—Ç–Ω—ã–µ —Å —Ñ–æ–Ω–∞—Ä—è–º–∏.png',
    'height_drop': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/11_–° –ø–µ—Ä–µ–ø–∞–¥–æ–º –≤—ã—Å–æ—Ç—ã.png',
    'double_height_drop': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/12_–° –¥–≤—É–º—è –ø–µ—Ä–µ–ø–∞–¥–∞–º–∏ –≤—ã—Å–æ—Ç—ã.png',
    'cylindrical': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/13_–í–∏—Å—è—á–∏–µ —Ü–∏–ª–∏–Ω–¥—Ä–∏—á–µ—Å–∫–æ–π —Ñ–æ—Ä–º—ã.png',
    'dome': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/14_–ö—É–ø–æ–ª—å–Ω—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è.png',
    'cone': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/15_–ö–æ–Ω–∏—á–µ—Å–∫–∏–µ –∫—Ä—É–≥–æ–≤—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è.png',
    'parapet': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/16_–ü–∞—Ä–∞–ø–µ—Ç—ã.png',
    'heightened': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/17_–£—á–∞—Å—Ç–∫–∏ –ø—Ä–∏ –≤–æ–∑–≤—ã—à–∞—é—â–∏—Ö—Å—è –Ω–∞–¥—Å—Ç—Ä–æ–π–∫–∞—Ö.png'
};

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
let currentStep = 1;
let sgValue = 1.8;
let ceValue = 1.0;
let ctValue = 1.0;
let muValue = 1.0;
let kbValue = 1.0;
let gammaF = 1.4;
let isMountainArea = false;
let altitude = 500;
let mountainRegion = '';
let currentCity = '';
let currentTemperature = null;
let currentSgMethod = 'manual';

// –§–£–ù–ö–¶–ò–ò –ù–ê–í–ò–ì–ê–¶–ò–ò
function showStep(stepNumber) {
    document.querySelectorAll('.step').forEach(step => {
        step.classList.remove('active');
    });
    document.getElementById(`step${stepNumber}`).classList.add('active');
    currentStep = stepNumber;
    window.scrollTo({ top: 0, behavior: 'smooth' });
}

function nextStep(nextStepNumber) {
    showStep(nextStepNumber);
}

function prevStep(prevStepNumber) {
    showStep(prevStepNumber);
}

// –ë–ê–ó–û–í–´–ï –§–£–ù–ö–¶–ò–ò –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–Ø –ú–ï–¢–û–î–û–í
function toggleSgMethod() {
    const method = document.querySelector('input[name="sgMethod"]:checked').value;
    currentSgMethod = method;
    document.getElementById('sgManualInput').style.display = method === 'manual' ? 'block' : 'none';
    document.getElementById('sgSpCalculation').style.display = method === 'sp' ? 'block' : 'none';
}

function toggleCeMethod() {
    const method = document.querySelector('input[name="ceMethod"]:checked').value;
    document.getElementById('ceManualInput').style.display = method === 'manual' ? 'block' : 'none';
    document.getElementById('ceSpCalculation').style.display = method === 'sp' ? 'block' : 'none';
    if (method === 'sp') {
        updateCe();
    }
}

function toggleCtMethod() {
    const method = document.querySelector('input[name="ctMethod"]:checked').value;
    document.getElementById('ctManualInput').style.display = method === 'manual' ? 'block' : 'none';
    document.getElementById('ctSpCalculation').style.display = method === 'sp' ? 'block' : 'none';
    if (method === 'sp') {
        updateCt();
    }
}

function toggleMuMethod() {
    const method = document.querySelector('input[name="muMethod"]:checked').value;
    document.getElementById('muManualInput').style.display = method === 'manual' ? 'block' : 'none';
    document.getElementById('muSpCalculation').style.display = method === 'sp' ? 'block' : 'none';
    if (method === 'sp') {
        updateMu();
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ä—Ç–æ–π
function showSpMethod(method) {
    const cityMethod = document.getElementById('cityMethod');
    const mapMethod = document.getElementById('mapMethod');
    const mapToggleBtn = document.getElementById('mapToggleBtn');
    
    if (method === 'city') {
        cityMethod.style.display = 'block';
        mapMethod.style.display = 'none';
        if (mapToggleBtn) mapToggleBtn.style.display = 'none';
        setFromCity();
    } else {
        cityMethod.style.display = 'none';
        mapMethod.style.display = 'block';
        if (mapToggleBtn) mapToggleBtn.style.display = 'inline-block';
    }
}

function toggleMap(id) {
    const elem = document.getElementById(id);
    elem.style.display = elem.style.display === 'none' ? 'block' : 'none';
    const btn = document.getElementById('mapToggleBtn');
    if (btn) {
        btn.textContent = elem.style.display === 'none' ? 'üó∫Ô∏è –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ä—Ç—É' : 'üó∫Ô∏è –°–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç—É';
    }
}

function updateMapSrc() {
    const type = document.getElementById('mapType').value;
    document.getElementById('snowMap').src = mapUrls[type];
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥–æ—Ä–æ–¥–∞–º–∏
function setFromCity() {
    const select = document.getElementById('citySelect');
    const option = select.options[select.selectedIndex];
    currentCity = option.value;
    const district = option.getAttribute('data-district');
    const temp = option.getAttribute('data-temp') || null;
    
    currentTemperature = temp ? parseFloat(temp) : null;
    
    if (district) {
        sgValue = sgValues[district] || 1.8;
        document.getElementById('sgValue').textContent = sgValue;
    }
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –≤ —Å–µ–ª–µ–∫—Ç–µ
    if (currentTemperature !== null) {
        const tempSelect = document.getElementById('januaryTemp');
        tempSelect.value = currentTemperature <= -5 ? 'cold' : 'warm';
    }
    
    updateTemperatureInfo();
    updateCe();
}

function updateSgFromMap() {
    const district = document.getElementById('snowDistrictMap').value;
    sgValue = sgValues[district] || 1.8;
    document.getElementById('sgValue').textContent = sgValue;
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ Ce
function updateCe() {
    const terrain = document.getElementById('terrainType').value;
    const protected = document.getElementById('protected').checked;
    const dimMin = parseFloat(document.getElementById('dimMin').value) || 50;
    const dimMax = parseFloat(document.getElementById('dimMax').value) || 50;
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤
    const dimensionError = document.getElementById('dimensionError');
    if (dimMin > dimMax) {
        dimensionError.style.display = 'block';
        document.getElementById('ceValue').textContent = '‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–∞–∑–º–µ—Ä–∞—Ö';
        document.getElementById('ceCalculationDetails').innerHTML = '<p class="warning">–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ —Ä–∞–∑–º–µ—Ä—ã –ø–æ–∫—Ä—ã—Ç–∏—è</p>';
        return;
    } else {
        dimensionError.style.display = 'none';
    }
    
    const Ce = calculateCe(terrain, dimMin, dimMax, protected);
    ceValue = Ce;
    document.getElementById('ceValue').textContent = `–†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ Ce: ${Ce.toFixed(2)}`;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏ —Ä–∞—Å—á–µ—Ç–∞
    let details = '';
    if (protected) {
        details = '<p class="note">üè† –ó–¥–∞–Ω–∏–µ –∑–∞—â–∏—â–µ–Ω–æ –æ—Ç –≤–µ—Ç—Ä–∞ - –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è Ce = 0.85</p>';
    } else {
        details = `<p class="note">üìè –†–∞–∑–º–µ—Ä—ã –ø–æ–∫—Ä—ã—Ç–∏—è: ${dimMin}√ó${dimMax} –º, —Ç–∏–ø –º–µ—Å—Ç–Ω–æ—Å—Ç–∏: ${terrain}</p>`;
    }
    document.getElementById('ceCalculationDetails').innerHTML = details;
}

function calculateCe(terrain, dimMin, dimMax, protected) {
    if (protected) return 0.85;
    
    // –†–∞—Å—á–µ—Ç –ø–æ –°–ü 20.13330.2016 –ø.10.6-10.9
    const l = Math.min(dimMin, dimMax);
    const L = Math.max(dimMin, dimMax);
    
    if (terrain === 'A') {
        if (l <= 50 && L <= 100) return 0.7;
        if (l > 100 || L > 200) return 1.0;
        return 0.85;
    } else if (terrain === 'B') {
        if (l <= 50 && L <= 100) return 0.7;
        if (l > 100 || L > 200) return 1.0;
        return 0.85;
    } else if (terrain === 'C') {
        return 1.0;
    }
    
    return 1.0;
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π
function updateTemperatureInfo() {
    const temperatureInfo = document.getElementById('temperatureInfo');
    const tempSelect = document.getElementById('januaryTemp');
    
    let temperatureHTML = '';
    
    if (tempSelect.value === 'cold') {
        temperatureHTML = `
            <p>‚úÖ –•–æ–ª–æ–¥–Ω—ã–π —Ä–µ–≥–∏–æ–Ω - –ø–æ–Ω–∏–∂–µ–Ω–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞</p>
            <p class="italic">${currentCity ? `–î–ª—è –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ ${currentCity}` : '–î–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞'}</p>
        `;
    } else if (tempSelect.value === 'warm') {
        temperatureHTML = `
            <p>‚ùå –¢–µ–ø–ª—ã–π —Ä–µ–≥–∏–æ–Ω - –ø–æ–Ω–∏–∂–µ–Ω–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ –Ω–µ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è</p>
            <p class="italic">${currentCity ? `–î–ª—è –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ ${currentCity}` : '–î–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞'}</p>
        `;
    } else {
        temperatureHTML = `
            <p class="italic">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∏–º—ã –≤—Ä—É—á–Ω—É—é –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø–æ–Ω–∏–∂–µ–Ω–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏</p>
        `;
    }
    
    if (temperatureInfo) {
        temperatureInfo.innerHTML = temperatureHTML;
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ Ct
function updateCt() {
    const ctType = document.querySelector('input[name="ctType"]:checked').value;
    const tempSelect = document.getElementById('januaryTemp').value;
    
    let ct = 1.0;
    let calculationDetails = '';
    
    switch(ctType) {
        case 'normal':
            ct = 1.0;
            calculationDetails = 'Ct = 1.0 (–æ–±—ã—á–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ —Å —É—Ç–µ–ø–ª–µ–Ω–∏–µ–º)';
            break;
        case 'transparent':
            ct = 1.0;
            calculationDetails = 'Ct = 1.0 (–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è)';
            break;
        case 'highLoss':
            if (tempSelect === 'cold') {
                ct = 1.1;
                calculationDetails = 'Ct = 1.1 (–ø–æ–∫—Ä—ã—Ç–∏—è —Å –ø–æ–≤—ã—à–µ–Ω–Ω—ã–º–∏ —Ç–µ–ø–ª–æ–≤—ã–º–∏ –ø–æ—Ç–µ—Ä—è–º–∏, —Ö–æ–ª–æ–¥–Ω–∞—è –∑–∏–º–∞ ‚â§ -5¬∞C)';
            } else if (tempSelect === 'warm') {
                ct = 1.2;
                calculationDetails = 'Ct = 1.2 (–ø–æ–∫—Ä—ã—Ç–∏—è —Å –ø–æ–≤—ã—à–µ–Ω–Ω—ã–º–∏ —Ç–µ–ø–ª–æ–≤—ã–º–∏ –ø–æ—Ç–µ—Ä—è–º–∏, —Ç–µ–ø–ª–∞—è –∑–∏–º–∞ > -5¬∞C)';
            } else {
                ct = 1.1;
                calculationDetails = 'Ct = 1.1 (–ø–æ–∫—Ä—ã—Ç–∏—è —Å –ø–æ–≤—ã—à–µ–Ω–Ω—ã–º–∏ —Ç–µ–ø–ª–æ–≤—ã–º–∏ –ø–æ—Ç–µ—Ä—è–º–∏, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ - –ø—Ä–∏–Ω—è—Ç–æ –ø–æ —Ö–æ–ª–æ–¥–Ω–æ–π –∑–∏–º–µ)';
            }
            break;
        case 'cold':
            ct = 1.2;
            calculationDetails = 'Ct = 1.2 (—Ö–æ–ª–æ–¥–Ω—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è —Å –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–º —Ç–µ–ø–ª–æ–ø–µ—Ä–µ–¥–∞—á–∏ ‚â§ 1 –í—Ç/(–º¬≤¬∑¬∞C))';
            break;
    }
    
    ctValue = ct;
    document.getElementById('ctValue').textContent = `–†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ Ct: ${ct.toFixed(2)}`;
    document.getElementById('ctCalculationDetails').innerHTML = `<div class="detailed-explanation">${calculationDetails}</div>`;
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ Œº
function showParams() {
    const type = document.getElementById('roofType').value;
    const ref = document.getElementById('roofType').options[document.getElementById('roofType').selectedIndex].getAttribute('data-ref');
    
    document.getElementById('roofRef').textContent = `–°—Å—ã–ª–∫–∞ –Ω–∞ –°–ü: ${ref}`;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    document.getElementById('roofImage').src = roofImages[type] || 'https://via.placeholder.com/400x250/3498db/ffffff?text=–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ+–Ω–µ+–¥–æ—Å—Ç—É–ø–Ω–æ';
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–≤–æ–¥–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞
    let paramsHTML = '';
    
    switch(type) {
        case 'single_slope':
        case 'pitched':
        case 'pointed':
        case 'shed':
        case 'multi_pitched':
            paramsHTML = '<label>–£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ –∫—Ä—ã—à–∏ Œ± (¬∞): <input type="number" id="roofAngle" min="0" max="90" value="30" onchange="updateMu()"></label>';
            break;
        case 'arched':
        case 'multi_arched':
            paramsHTML = `
                <label>–£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ –∫—Ä—ã—à–∏ Œ± (¬∞): <input type="number" id="roofAngle" min="0" max="90" value="30" onchange="updateMu()"></label>
                <label>–û—Ç–Ω–æ—à–µ–Ω–∏–µ f/l: <input type="number" id="archRatio" step="0.01" min="0" max="1" value="0.1" onchange="updateMu()"></label>
            `;
            break;
        case 'lantern':
        case 'long_lantern':
        case 'multi_lantern':
            paramsHTML = `
                <label>–£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ –∫—Ä—ã—à–∏ Œ± (¬∞): <input type="number" id="roofAngle" min="0" max="90" value="30" onchange="updateMu()"></label>
                <label>–í—ã—Å–æ—Ç–∞ —Ñ–æ–Ω–∞—Ä—è h (–º): <input type="number" id="lanternHeight" min="0" value="2" onchange="updateMu()"></label>
                <label>–®–∏—Ä–∏–Ω–∞ —Ñ–æ–Ω–∞—Ä—è b (–º): <input type="number" id="lanternWidth" min="0" value="3" onchange="updateMu()"></label>
                <label>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Ñ–æ–Ω–∞—Ä—è–º–∏ (–º): <input type="number" id="lanternDistance" min="0" value="6" onchange="updateMu()"></label>
            `;
            break;
        case 'height_drop':
            paramsHTML = `
                <label>–í—ã—Å–æ—Ç–∞ –ø–µ—Ä–µ–ø–∞–¥–∞ h (–º): <input type="number" id="heightDrop" min="0" value="2" onchange="updateMu()"></label>
                <label>–î–ª–∏–Ω–∞ —Å–∫–∞—Ç–∞ –≤–µ—Ä—Ö–Ω–µ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è l1 (–º): <input type="number" id="lengthUpper" min="0" value="10" onchange="updateMu()"></label>
                <label>–î–ª–∏–Ω–∞ —Å–∫–∞—Ç–∞ –Ω–∏–∂–Ω–µ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è l2 (–º): <input type="number" id="lengthLower" min="0" value="10" onchange="updateMu()"></label>
            `;
            break;
        case 'double_height_drop':
            paramsHTML = `
                <label>–í—ã—Å–æ—Ç–∞ –ø–µ—Ä–≤–æ–≥–æ –ø–µ—Ä–µ–ø–∞–¥–∞ h1 (–º): <input type="number" id="heightDrop1" min="0" value="2" onchange="updateMu()"></label>
                <label>–í—ã—Å–æ—Ç–∞ –≤—Ç–æ—Ä–æ–≥–æ –ø–µ—Ä–µ–ø–∞–¥–∞ h2 (–º): <input type="number" id="heightDrop2" min="0" value="2" onchange="updateMu()"></label>
                <label>–î–ª–∏–Ω–∞ —Å–∫–∞—Ç–æ–≤ (–º): <input type="number" id="lengthSlope" min="0" value="10" onchange="updateMu()"></label>
            `;
            break;
        case 'cylindrical':
            paramsHTML = '<label>–£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ –æ–±—Ä–∞–∑—É—é—â–µ–π Œ± (¬∞): <input type="number" id="cylindricalAngle" min="0" max="90" value="30" onchange="updateMu()"></label>';
            break;
        case 'dome':
            paramsHTML = '<label>–û—Ç–Ω–æ—à–µ–Ω–∏–µ f/d: <input type="number" id="domeRatio" step="0.01" min="0" max="0.5" value="0.1" onchange="updateMu()"></label>';
            break;
        case 'cone':
            paramsHTML = '<label>–£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ –æ–±—Ä–∞–∑—É—é—â–µ–π Œ± (¬∞): <input type="number" id="coneAngle" min="0" max="90" value="30" onchange="updateMu()"></label>';
            break;
        case 'parapet':
            paramsHTML = `
                <label>–í—ã—Å–æ—Ç–∞ –ø–∞—Ä–∞–ø–µ—Ç–∞ h (–º): <input type="number" id="parapetHeight" min="0" value="1" onchange="updateMu()"></label>
                <label>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –ø–∞—Ä–∞–ø–µ—Ç–∞ (–º): <input type="number" id="parapetDistance" min="0" value="2" onchange="updateMu()"></label>
            `;
            break;
        case 'heightened':
            paramsHTML = `
                <label>–í—ã—Å–æ—Ç–∞ –Ω–∞–¥—Å—Ç—Ä–æ–π–∫–∏ h (–º): <input type="number" id="heightenedHeight" min="0" value="3" onchange="updateMu()"></label>
                <label>–®–∏—Ä–∏–Ω–∞ –Ω–∞–¥—Å—Ç—Ä–æ–π–∫–∏ b (–º): <input type="number" id="heightenedWidth" min="0" value="5" onchange="updateMu()"></label>
            `;
            break;
        default:
            paramsHTML = '<label>–î–∞–Ω–Ω—ã–π —Ç–∏–ø –ø–æ–∫—Ä—ã—Ç–∏—è —Ç—Ä–µ–±—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞</label>';
    }
    
    document.getElementById('roofParams').innerHTML = paramsHTML;
    updateMu();
}

function updateMu() {
    const type = document.getElementById('roofType').value;
    let muResults = {};
    let details = '';
    
    switch(type) {
        case 'single_slope':
            const angleSingle = parseFloat(document.getElementById('roofAngle').value) || 0;
            muResults = calculateMuForSingleSlope(angleSingle);
            details = `–û–¥–Ω–æ—Å–∫–∞—Ç–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ, —É–≥–æ–ª ${angleSingle}¬∞`;
            break;
        case 'pitched':
            const anglePitched = parseFloat(document.getElementById('roofAngle').value) || 0;
            muResults = calculateMuForPitchedRoof(anglePitched);
            details = `–î–≤—É—Å–∫–∞—Ç–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ, —É–≥–æ–ª ${anglePitched}¬∞`;
            break;
        case 'pointed':
            const anglePointed = parseFloat(document.getElementById('roofAngle').value) || 0;
            muResults = calculateMuForPointedRoof(anglePointed);
            details = `–°—Ç—Ä–µ–ª—å—á–∞—Ç–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ, —É–≥–æ–ª ${anglePointed}¬∞`;
            break;
        case 'arched':
            const angleArched = parseFloat(document.getElementById('roofAngle').value) || 0;
            const ratioArched = parseFloat(document.getElementById('archRatio').value) || 0.1;
            muResults = calculateMuForArchedRoof(angleArched, ratioArched);
            details = `–°–≤–æ–¥—á–∞—Ç–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ, —É–≥–æ–ª ${angleArched}¬∞, f/l=${ratioArched}`;
            break;
        case 'lantern':
            const angleLantern = parseFloat(document.getElementById('roofAngle').value) || 0;
            const heightLantern = parseFloat(document.getElementById('lanternHeight').value) || 2;
            const widthLantern = parseFloat(document.getElementById('lanternWidth').value) || 3;
            const distanceLantern = parseFloat(document.getElementById('lanternDistance').value) || 6;
            muResults = calculateMuForLanternRoof(angleLantern, heightLantern, widthLantern, distanceLantern);
            details = `–ü–æ–∫—Ä—ã—Ç–∏–µ —Å —Ñ–æ–Ω–∞—Ä—è–º–∏, —É–≥–æ–ª ${angleLantern}¬∞, h=${heightLantern}–º, b=${widthLantern}–º`;
            break;
        case 'shed':
            const angleShed = parseFloat(document.getElementById('roofAngle').value) || 0;
            muResults = calculateMuForShedRoof(angleShed);
            details = `–®–µ–¥–æ–≤–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ, —É–≥–æ–ª ${angleShed}¬∞`;
            break;
        case 'multi_pitched':
            const angleMulti = parseFloat(document.getElementById('roofAngle').value) || 0;
            muResults = calculateMuForMultiPitchedRoof(angleMulti);
            details = `–ú–Ω–æ–≥–æ–ø—Ä–æ–ª–µ—Ç–Ω–æ–µ –¥–≤—É—Å–∫–∞—Ç–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ, —É–≥–æ–ª ${angleMulti}¬∞`;
            break;
        case 'multi_arched':
            const angleMultiArched = parseFloat(document.getElementById('roofAngle').value) || 0;
            const ratioMultiArched = parseFloat(document.getElementById('archRatio').value) || 0.1;
            muResults = calculateMuForMultiArchedRoof(angleMultiArched, ratioMultiArched);
            details = `–ú–Ω–æ–≥–æ–ø—Ä–æ–ª–µ—Ç–Ω–æ–µ —Å–≤–æ–¥—á–∞—Ç–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ, —É–≥–æ–ª ${angleMultiArched}¬∞, f/l=${ratioMultiArched}`;
            break;
        case 'height_drop':
            const h = parseFloat(document.getElementById('heightDrop').value) || 2;
            const l1 = parseFloat(document.getElementById('lengthUpper').value) || 10;
            const l2 = parseFloat(document.getElementById('lengthLower').value) || 10;
            muResults = calculateMuForHeightDrop(h, l1, l2);
            details = `–ü–æ–∫—Ä—ã—Ç–∏–µ —Å –ø–µ—Ä–µ–ø–∞–¥–æ–º –≤—ã—Å–æ—Ç—ã, h=${h}–º, l1=${l1}–º, l2=${l2}–º`;
            break;
        case 'parapet':
            const parapetHeight = parseFloat(document.getElementById('parapetHeight').value) || 1;
            const parapetDistance = parseFloat(document.getElementById('parapetDistance').value) || 2;
            muResults = calculateMuForParapet(parapetHeight, parapetDistance);
            details = `–ü–∞—Ä–∞–ø–µ—Ç –≤—ã—Å–æ—Ç–æ–π ${parapetHeight}–º, —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ ${parapetDistance}–º`;
            break;
        case 'cone':
            const coneAngle = parseFloat(document.getElementById('coneAngle').value) || 30;
            muResults = calculateMuForConeRoof(coneAngle);
            details = `–ö–æ–Ω–∏—á–µ—Å–∫–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ, —É–≥–æ–ª ${coneAngle}¬∞`;
            break;
        default:
            muResults = {
                '–°—Ö–µ–º–∞ 1 (—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–∞—è)': {
                    'Œº': '1.0',
                    '–æ–ø–∏—Å–∞–Ω–∏–µ': '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é',
                    '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–û–±—â–∏–π —Ä–∞—Å—á–µ—Ç'
                }
            };
            details = '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: Œº = 1.0';
    }
    
    displayMuSchemes(muResults);
    const muCalculationDetails = document.getElementById('muCalculationDetails');
    if (muCalculationDetails) {
        muCalculationDetails.innerHTML = `<p class="note">${details}</p>`;
    }
}

// –î–ï–¢–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –†–ê–°–ß–ï–¢–ê Œº –ü–û –°–ü 20.13330.2016 (–¢–û–ß–ù–û–ï –°–û–û–¢–í–ï–¢–°–¢–í–ò–ï –°–•–ï–ú–ê–ú)
function calculateMuForSingleSlope(angle) {
    const mu = calculateBaseMu(angle);
    
    return {
        '–°—Ö–µ–º–∞ –ë.1 (–≤–∞—Ä–∏–∞–Ω—Ç 1)': {
            'Œº': mu.toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–û–¥–Ω–æ—Å–∫–∞—Ç–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.1 (–≤–∞—Ä–∏–∞–Ω—Ç 1). –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ Œ± = ${angle}¬∞. –†–∞—Å—á–µ—Ç –ø–æ —Ñ–æ—Ä–º—É–ª–µ: Œº = ${mu.toFixed(2)}`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏'
        }
    };
}

function calculateMuForPitchedRoof(angle) {
    const mu = calculateBaseMu(angle);
    
    return {
        '–°—Ö–µ–º–∞ –ë.1 (–≤–∞—Ä–∏–∞–Ω—Ç 1)': {
            'Œº‚ÇÅ': mu.toFixed(2),
            'Œº‚ÇÇ': mu.toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–î–≤—É—Å–∫–∞—Ç–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.1 (–≤–∞—Ä–∏–∞–Ω—Ç 1). –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ Œ± = ${angle}¬∞. –†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: Œº‚ÇÅ = Œº‚ÇÇ = ${mu.toFixed(2)}`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ–≥–∏–±–æ–≤'
        },
        '–°—Ö–µ–º–∞ –ë.1 (–≤–∞—Ä–∏–∞–Ω—Ç 2)': {
            'Œº‚ÇÅ': (1.25 * mu).toFixed(2),
            'Œº‚ÇÇ': (0.75 * mu).toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–î–≤—É—Å–∫–∞—Ç–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.1 (–≤–∞—Ä–∏–∞–Ω—Ç 2). –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ Œ± = ${angle}¬∞. –ù–µ—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: Œº‚ÇÅ = 1.25√ó${mu.toFixed(2)} = ${(1.25 * mu).toFixed(2)}, Œº‚ÇÇ = 0.75√ó${mu.toFixed(2)} = ${(0.75 * mu).toFixed(2)}`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏ (–≤–∞—Ä–∏–∞–Ω—Ç 2)'
        },
        '–°—Ö–µ–º–∞ –ë.1 (–≤–∞—Ä–∏–∞–Ω—Ç 3)': {
            'Œº‚ÇÅ': (0.6 * mu).toFixed(2),
            'Œº‚ÇÇ': (1.4 * mu).toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–î–≤—É—Å–∫–∞—Ç–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.1 (–≤–∞—Ä–∏–∞–Ω—Ç 3). –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ Œ± = ${angle}¬∞. –ù–µ—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: Œº‚ÇÅ = 0.6√ó${mu.toFixed(2)} = ${(0.6 * mu).toFixed(2)}, Œº‚ÇÇ = 1.4√ó${mu.toFixed(2)} = ${(1.4 * mu).toFixed(2)}`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏ (–≤–∞—Ä–∏–∞–Ω—Ç 3)'
        }
    };
}

function calculateMuForArchedRoof(angle, ratio) {
    const muArch = calculateArchMu(ratio);
    
    return {
        '–°—Ö–µ–º–∞ –ë.2 (–≤–∞—Ä–∏–∞–Ω—Ç 1)': {
            'Œº': muArch.toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–°–≤–æ–¥—á–∞—Ç–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.2 (–≤–∞—Ä–∏–∞–Ω—Ç 1). –£–≥–æ–ª ${angle}¬∞, –æ—Ç–Ω–æ—à–µ–Ω–∏–µ f/l = ${ratio}. –†–∞—Å—á–µ—Ç: Œº = ${muArch.toFixed(2)}`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è'
        },
        '–°—Ö–µ–º–∞ –ë.2 (–≤–∞—Ä–∏–∞–Ω—Ç 2)': {
            'Œº –Ω–∞ —É—á–∞—Å—Ç–∫–µ 0-0.5l': '0.5',
            'Œº –Ω–∞ —É—á–∞—Å—Ç–∫–µ 0.5l-l': '1.0',
            'Œº –Ω–∞ —É—á–∞—Å—Ç–∫–µ l-1.5l': '1.5',
            'Œº –Ω–∞ —É—á–∞—Å—Ç–∫–µ 1.5l-2l': '1.0',
            'Œº –Ω–∞ —É—á–∞—Å—Ç–∫–µ 2l-2.5l': '0.5',
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–°–≤–æ–¥—á–∞—Ç–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.2 (–≤–∞—Ä–∏–∞–Ω—Ç 2). –£–≥–æ–ª ${angle}¬∞, –æ—Ç–Ω–æ—à–µ–Ω–∏–µ f/l = ${ratio}. –ù–µ—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –¥–ª–∏–Ω–µ –ø–æ–∫—Ä—ã—Ç–∏—è`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏'
        }
    };
}

function calculateMuForLanternRoof(angle, height, width, distance) {
    const mu = calculateBaseMu(angle);
    const b = width;
    const h = height;
    const l = distance;
    
    // –†–∞—Å—á–µ—Ç –ø–æ –ø.–ë.3 –°–ü 20.13330.2016
    const mu1 = Math.min(2 * h / b, 4).toFixed(2);
    const mu2 = Math.min(2 * h / l, 4).toFixed(2);
    
    return {
        '–°—Ö–µ–º–∞ –ë.3 (–≤–∞—Ä–∏–∞–Ω—Ç 1)': {
            'Œº –≤ –∑–æ–Ω–µ A': mu.toFixed(2),
            'Œº‚ÇÅ –≤ –∑–æ–Ω–µ B': Math.max(mu, parseFloat(mu2)).toFixed(2),
            'Œº‚ÇÇ –≤ –∑–æ–Ω–µ C': Math.max(mu, parseFloat(mu1), parseFloat(mu2)).toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–ü–æ–∫—Ä—ã—Ç–∏–µ —Å —Ñ–æ–Ω–∞—Ä—è–º–∏ –ø–æ —Å—Ö–µ–º–µ –ë.3 (–≤–∞—Ä–∏–∞–Ω—Ç 1). h=${h}–º, b=${b}–º, l=${l}–º. –†–∞—Å—á–µ—Ç: Œº‚ÇÅ = max(${mu.toFixed(2)}, 2h/l=${mu2}) = ${Math.max(mu, parseFloat(mu2)).toFixed(2)}, Œº‚ÇÇ = max(${mu.toFixed(2)}, 2h/b=${mu1}, 2h/l=${mu2}) = ${Math.max(mu, parseFloat(mu1), parseFloat(mu2)).toFixed(2)}`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è'
        },
        '–°—Ö–µ–º–∞ –ë.3 (–≤–∞—Ä–∏–∞–Ω—Ç 2)': {
            'Œº –Ω–∞ –ø–æ–∫—Ä—ã—Ç–∏–∏ —Ñ–æ–Ω–∞—Ä—è': mu1,
            'Œº —É —Ç–æ—Ä—Ü–æ–≤ —Ñ–æ–Ω–∞—Ä—è': mu2,
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–ü–æ–∫—Ä—ã—Ç–∏–µ —Å —Ñ–æ–Ω–∞—Ä—è–º–∏ –ø–æ —Å—Ö–µ–º–µ –ë.3 (–≤–∞—Ä–∏–∞–Ω—Ç 2). –†–∞—Å—á–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ –¥–ª—è —Ñ–æ–Ω–∞—Ä–µ–π: Œº = 2h/b = ${mu1}, Œº = 2h/l = ${mu2}`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è –ø–æ–∫—Ä—ã—Ç–∏—è —Ñ–æ–Ω–∞—Ä–µ–π'
        }
    };
}

function calculateMuForShedRoof(angle) {
    const mu = calculateBaseMu(angle);
    
    return {
        '–°—Ö–µ–º–∞ –ë.5 (–≤–∞—Ä–∏–∞–Ω—Ç 1)': {
            'Œº –≤ –∑–æ–Ω–µ A': mu.toFixed(2),
            'Œº‚ÇÅ –≤ –∑–æ–Ω–µ B': (1.4 * mu).toFixed(2),
            'Œº‚ÇÇ –≤ –∑–æ–Ω–µ C': (0.6 * mu).toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–®–µ–¥–æ–≤–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.5 (–≤–∞—Ä–∏–∞–Ω—Ç 1). –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ Œ± = ${angle}¬∞. –†–∞—Å—á–µ—Ç: Œº‚ÇÅ = 1.4√ó${mu.toFixed(2)} = ${(1.4 * mu).toFixed(2)}, Œº‚ÇÇ = 0.6√ó${mu.toFixed(2)} = ${(0.6 * mu).toFixed(2)}`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏'
        },
        '–°—Ö–µ–º–∞ –ë.5 (–≤–∞—Ä–∏–∞–Ω—Ç 2)': {
            'Œº –≤ –∑–æ–Ω–µ A': mu.toFixed(2),
            'Œº‚ÇÅ –≤ –∑–æ–Ω–µ B': (0.6 * mu).toFixed(2),
            'Œº‚ÇÇ –≤ –∑–æ–Ω–µ C': (1.4 * mu).toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–®–µ–¥–æ–≤–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.5 (–≤–∞—Ä–∏–∞–Ω—Ç 2). –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ Œ± = ${angle}¬∞. –†–∞—Å—á–µ—Ç: Œº‚ÇÅ = 0.6√ó${mu.toFixed(2)} = ${(0.6 * mu).toFixed(2)}, Œº‚ÇÇ = 1.4√ó${mu.toFixed(2)} = ${(1.4 * mu).toFixed(2)}`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏'
        }
    };
}

function calculateMuForMultiPitchedRoof(angle) {
    const mu = calculateBaseMu(angle);
    
    return {
        '–°—Ö–µ–º–∞ –ë.6 (–≤–∞—Ä–∏–∞–Ω—Ç 1)': {
            'Œº –Ω–∞ –≤—Å–µ—Ö —Å–∫–∞—Ç–∞—Ö': mu.toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–ú–Ω–æ–≥–æ–ø—Ä–æ–ª–µ—Ç–Ω–æ–µ –¥–≤—É—Å–∫–∞—Ç–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.6 (–≤–∞—Ä–∏–∞–Ω—Ç 1). –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ Œ± = ${angle}¬∞. –†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ–≥–∏–±–æ–≤'
        },
        '–°—Ö–µ–º–∞ –ë.6 (–≤–∞—Ä–∏–∞–Ω—Ç 2)': {
            'Œº‚ÇÅ –Ω–∞ –∫—Ä–∞–π–Ω–∏—Ö —Å–∫–∞—Ç–∞—Ö': (1.4 * mu).toFixed(2),
            'Œº‚ÇÇ –Ω–∞ —Å—Ä–µ–¥–Ω–∏—Ö —Å–∫–∞—Ç–∞—Ö': (0.6 * mu).toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–ú–Ω–æ–≥–æ–ø—Ä–æ–ª–µ—Ç–Ω–æ–µ –¥–≤—É—Å–∫–∞—Ç–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.6 (–≤–∞—Ä–∏–∞–Ω—Ç 2). –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ Œ± = ${angle}¬∞. –†–∞—Å—á–µ—Ç: Œº‚ÇÅ = 1.4√ó${mu.toFixed(2)} = ${(1.4 * mu).toFixed(2)}, Œº‚ÇÇ = 0.6√ó${mu.toFixed(2)} = ${(0.6 * mu).toFixed(2)}`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏'
        }
    };
}

function calculateMuForMultiArchedRoof(angle, ratio) {
    const muArch = calculateArchMu(ratio);
    
    return {
        '–°—Ö–µ–º–∞ –ë.6 (–≤–∞—Ä–∏–∞–Ω—Ç 1)': {
            'Œº –≤–æ –≤—Å–µ—Ö –ø—Ä–æ–ª–µ—Ç–∞—Ö': muArch.toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–ú–Ω–æ–≥–æ–ø—Ä–æ–ª–µ—Ç–Ω–æ–µ —Å–≤–æ–¥—á–∞—Ç–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.6 (–≤–∞—Ä–∏–∞–Ω—Ç 1). –£–≥–æ–ª ${angle}¬∞, –æ—Ç–Ω–æ—à–µ–Ω–∏–µ f/l = ${ratio}. –†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ–≥–∏–±–æ–≤'
        },
        '–°—Ö–µ–º–∞ –ë.6 (–≤–∞—Ä–∏–∞–Ω—Ç 2)': {
            'Œº‚ÇÅ –≤ –∫—Ä–∞–π–Ω–∏—Ö –ø—Ä–æ–ª–µ—Ç–∞—Ö': (1.4 * muArch).toFixed(2),
            'Œº‚ÇÇ –≤ —Å—Ä–µ–¥–Ω–∏—Ö –ø—Ä–æ–ª–µ—Ç–∞—Ö': (0.6 * muArch).toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–ú–Ω–æ–≥–æ–ø—Ä–æ–ª–µ—Ç–Ω–æ–µ —Å–≤–æ–¥—á–∞—Ç–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.6 (–≤–∞—Ä–∏–∞–Ω—Ç 2). –£–≥–æ–ª ${angle}¬∞, –æ—Ç–Ω–æ—à–µ–Ω–∏–µ f/l = ${ratio}. –†–∞—Å—á–µ—Ç: Œº‚ÇÅ = 1.4√ó${muArch.toFixed(2)} = ${(1.4 * muArch).toFixed(2)}, Œº‚ÇÇ = 0.6√ó${muArch.toFixed(2)} = ${(0.6 * muArch).toFixed(2)}`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏'
        }
    };
}

function calculateMuForHeightDrop(h, l1, l2) {
    const mu1 = Math.min(h / l1, 2).toFixed(2);
    const mu2 = Math.min(h / l2, 2).toFixed(2);
    
    return {
        '–°—Ö–µ–º–∞ –ë.7 (–≤–∞—Ä–∏–∞–Ω—Ç 1)': {
            'Œº‚ÇÅ –Ω–∞ –≤–µ—Ä—Ö–Ω–µ–º –ø–æ–∫—Ä—ã—Ç–∏–∏': mu1,
            'Œº‚ÇÇ –Ω–∞ –Ω–∏–∂–Ω–µ–º –ø–æ–∫—Ä—ã—Ç–∏–∏': mu2,
            'Œº‚ÇÉ –≤ –∑–æ–Ω–µ –ø–µ—Ä–µ–ø–∞–¥–∞': '2.0',
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–ü–æ–∫—Ä—ã—Ç–∏–µ —Å –ø–µ—Ä–µ–ø–∞–¥–æ–º –≤—ã—Å–æ—Ç—ã –ø–æ —Å—Ö–µ–º–µ –ë.7 (–≤–∞—Ä–∏–∞–Ω—Ç 1). h=${h}–º, l1=${l1}–º, l2=${l2}–º. –†–∞—Å—á–µ—Ç: Œº‚ÇÅ = min(h/l1, 2) = ${mu1}, Œº‚ÇÇ = min(h/l2, 2) = ${mu2}, Œº‚ÇÉ = 2.0`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏'
        },
        '–°—Ö–µ–º–∞ –ë.7 (–≤–∞—Ä–∏–∞–Ω—Ç 2)': {
            'Œº‚ÇÅ –Ω–∞ –≤–µ—Ä—Ö–Ω–µ–º –ø–æ–∫—Ä—ã—Ç–∏–∏': mu1,
            'Œº‚ÇÇ –Ω–∞ –Ω–∏–∂–Ω–µ–º –ø–æ–∫—Ä—ã—Ç–∏–∏': mu2,
            'Œº‚ÇÉ –≤ –∑–æ–Ω–µ –ø–µ—Ä–µ–ø–∞–¥–∞': '0.0',
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–ü–æ–∫—Ä—ã—Ç–∏–µ —Å –ø–µ—Ä–µ–ø–∞–¥–æ–º –≤—ã—Å–æ—Ç—ã –ø–æ —Å—Ö–µ–º–µ –ë.7 (–≤–∞—Ä–∏–∞–Ω—Ç 2). h=${h}–º, l1=${l1}–º, l2=${l2}–º. –†–∞—Å—á–µ—Ç: Œº‚ÇÅ = min(h/l1, 2) = ${mu1}, Œº‚ÇÇ = min(h/l2, 2) = ${mu2}, Œº‚ÇÉ = 0.0`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏'
        }
    };
}

function calculateMuForParapet(h, distance) {
    // –†–∞—Å—á–µ—Ç –ø–æ –ø.–ë.13 –°–ü 20.13330.2016
    const mu = Math.min(2 * h / distance, 3).toFixed(2);
    
    return {
        '–°—Ö–µ–º–∞ –ë.13 (–≤–∞—Ä–∏–∞–Ω—Ç –∞)': {
            'Œº': mu,
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–ü–∞—Ä–∞–ø–µ—Ç –ø–æ —Å—Ö–µ–º–µ –ë.13 (–≤–∞—Ä–∏–∞–Ω—Ç –∞). –í—ã—Å–æ—Ç–∞ –ø–∞—Ä–∞–ø–µ—Ç–∞ h=${h}–º, —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –ø–∞—Ä–∞–ø–µ—Ç–∞ ${distance}–º. –†–∞—Å—á–µ—Ç: Œº = min(2h/${distance}, 3) = ${mu}`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –Ω–∞–≥—Ä—É–∑–∫–∏ —É –ø–∞—Ä–∞–ø–µ—Ç–∞'
        },
        '–°—Ö–µ–º–∞ –ë.13 (–≤–∞—Ä–∏–∞–Ω—Ç –±)': {
            'Œº': '3.0',
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–ü–∞—Ä–∞–ø–µ—Ç –ø–æ —Å—Ö–µ–º–µ –ë.13 (–≤–∞—Ä–∏–∞–Ω—Ç –±). –í—ã—Å–æ—Ç–∞ –ø–∞—Ä–∞–ø–µ—Ç–∞ h=${h}–º. –ü—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ Œº = 3.0`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –Ω–∞–≥—Ä—É–∑–∫–∏ —É –ø–∞—Ä–∞–ø–µ—Ç–∞'
        }
    };
}

function calculateMuForConeRoof(angle) {
    const mu = calculateBaseMu(angle);
    
    return {
        '–°—Ö–µ–º–∞ –ë.15': {
            'Œº': mu.toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–ö–æ–Ω–∏—á–µ—Å–∫–æ–µ –∫—Ä—É–≥–æ–≤–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.15. –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ –æ–±—Ä–∞–∑—É—é—â–µ–π Œ± = ${angle}¬∞. –†–∞—Å—á–µ—Ç: Œº = ${mu.toFixed(2)}`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è'
        }
    };
}

function calculateBaseMu(angle) {
    if (angle <= 25) return 1.0;
    if (angle >= 60) return 0.0;
    return (60 - angle) / 35;
}

function calculateArchMu(ratio) {
    if (ratio <= 0.1) return 1.0;
    if (ratio >= 0.4) return 0.0;
    return 1.25 * (1 - 2.5 * ratio);
}

function displayMuSchemes(schemes) {
    const container = document.getElementById('muSchemes');
    let html = '';
    
    for (const [schemeName, schemeData] of Object.entries(schemes)) {
        html += `<div class="scheme">`;
        html += `<h4>${schemeName}</h4>`;
        
        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è Œº
        for (const [key, value] of Object.entries(schemeData)) {
            if (key.startsWith('Œº')) {
                html += `<p><strong>${key}:</strong> ${value}</p>`;
            }
        }
        
        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ
        html += `<p class="scheme-description">${schemeData.–æ–ø–∏—Å–∞–Ω–∏–µ}</p>`;
        html += `<p class="scheme-application"><em>–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:</em> ${schemeData.–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ}</p>`;
        html += `</div>`;
    }
    
    container.innerHTML = html;
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ kb
function updateKb() {
    const kbType = document.querySelector('input[name="kbType"]:checked').value;
    
    let kb = 1.0;
    let calculationDetails = '';
    
    switch(kbType) {
        case 'normal':
            kb = 1.0;
            calculationDetails = 'kb = 1.0 (–æ–±—ã—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏)';
            break;
        case 'special':
            kb = 0.85;
            calculationDetails = 'kb = 0.85 (—Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –ø.10.11 –°–ü 20.13330.2016)';
            break;
    }
    
    kbValue = kb;
    document.getElementById('kbValue').textContent = `–†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ kb: ${kb.toFixed(2)}`;
    document.getElementById('kbCalculationDetails').innerHTML = `<div class="detailed-explanation">${calculationDetails}</div>`;
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ Œ≥f
function updateGammaF() {
    const gammaFType = document.querySelector('input[name="gammaFType"]:checked').value;
    
    let gamma = 1.4;
    let calculationDetails = '';
    
    switch(gammaFType) {
        case 'normal':
            gamma = 1.4;
            calculationDetails = 'Œ≥f = 1.4 (–Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–æ–∫)';
            break;
        case 'special':
            gamma = 1.2;
            calculationDetails = 'Œ≥f = 1.2 (–æ—Å–æ–±–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–æ–∫)';
            break;
    }
    
    gammaF = gamma;
    document.getElementById('gammaFValue').textContent = `–í—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ Œ≥f: ${gamma.toFixed(2)}`;
    document.getElementById('gammaFCalculationDetails').innerHTML = `<div class="detailed-explanation">${calculationDetails}</div>`;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∏—Ç–æ–≥–æ–≤–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏
function calculateFinalLoad() {
    // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤
    const sgManual = parseFloat(document.getElementById('sgManual').value) || sgValue;
    const ceManual = parseFloat(document.getElementById('ceManual').value) || ceValue;
    const ctManual = parseFloat(document.getElementById('ctManual').value) || ctValue;
    const muManual = parseFloat(document.getElementById('muManual').value) || muValue;
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
    const sg = currentSgMethod === 'manual' ? sgManual : sgValue;
    const ce = document.querySelector('input[name="ceMethod"]:checked').value === 'manual' ? ceManual : ceValue;
    const ct = document.querySelector('input[name="ctMethod"]:checked').value === 'manual' ? ctManual : ctValue;
    const mu = document.querySelector('input[name="muMethod"]:checked').value === 'manual' ? muManual : muValue;
    
    // –†–∞—Å—á–µ—Ç –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏
    const sn = sg * ce * ct * mu * kbValue;
    
    // –†–∞—Å—á–µ—Ç —Ä–∞—Å—á–µ—Ç–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏
    const sr = sn * gammaF;
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    document.getElementById('normalLoad').textContent = sn.toFixed(3);
    document.getElementById('designLoad').textContent = sr.toFixed(3);
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –¥–µ—Ç–∞–ª–∏ —Ä–∞—Å—á–µ—Ç–∞
    const calculationDetails = `
        <p><strong>–§–æ—Ä–º—É–ª–∞ —Ä–∞—Å—á–µ—Ç–∞ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏:</strong></p>
        <p>S‚ÇÄ = Sg √ó Ce √ó Ct √ó Œº √ó kb</p>
        <p>S‚ÇÄ = ${sg.toFixed(2)} √ó ${ce.toFixed(2)} √ó ${ct.toFixed(2)} √ó ${mu.toFixed(2)} √ó ${kbValue.toFixed(2)} = ${sn.toFixed(3)} –∫–ü–∞</p>
        <br>
        <p><strong>–§–æ—Ä–º—É–ª–∞ —Ä–∞—Å—á–µ—Ç–∞ —Ä–∞—Å—á–µ—Ç–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏:</strong></p>
        <p>S = S‚ÇÄ √ó Œ≥f</p>
        <p>S = ${sn.toFixed(3)} √ó ${gammaF.toFixed(2)} = ${sr.toFixed(3)} –∫–ü–∞</p>
    `;
    
    document.getElementById('finalCalculationDetails').innerHTML = calculationDetails;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø—Ä–∞–≤–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã—Å–æ—Ç–µ —Å–Ω–µ–∂–Ω–æ–≥–æ –ø–æ–∫—Ä–æ–≤–∞
    const snowHeightInfo = document.getElementById('snowHeightInfo');
    if (snowHeightInfo) {
        const minHeight = (sn / 0.8).toFixed(2);
        const maxHeight = (sn / 0.3).toFixed(2);
        snowHeightInfo.innerHTML = `
            <p class="note">–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è —Å–Ω–µ–≥–æ–≤–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ ${sn.toFixed(3)} –∫–ü–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—ã—Å–æ—Ç–µ —Å–Ω–µ–∂–Ω–æ–≥–æ –ø–æ–∫—Ä–æ–≤–∞ –æ—Ç ${minHeight} –º –¥–æ ${maxHeight} –º (–ø—Ä–∏ –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏ —Å–Ω–µ–≥–∞ 0.3-0.8 —Ç/–º¬≥)</p>
        `;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    document.getElementById('finalResults').style.display = 'block';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function exportResults() {
    const results = {
        '–ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞': document.getElementById('normalLoad').textContent,
        '–†–∞—Å—á–µ—Ç–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞': document.getElementById('designLoad').textContent,
        '–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã': {
            'Sg': sgValue,
            'Ce': ceValue,
            'Ct': ctValue,
            'Œº': muValue,
            'kb': kbValue,
            'Œ≥f': gammaF
        }
    };
    
    const dataStr = "data:text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(results, null, 2));
    const downloadAnchorNode = document.createElement('a');
    downloadAnchorNode.setAttribute("href", dataStr);
    downloadAnchorNode.setAttribute("download", "snow_load_results.json");
    document.body.appendChild(downloadAnchorNode);
    downloadAnchorNode.click();
    downloadAnchorNode.remove();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    updateCe();
    updateCt();
    updateKb();
    updateGammaF();
    showParams();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã
    updateMapSrc();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π —à–∞–≥
    showStep(1);
});
