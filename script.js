// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
const sgValues = {
    'I': 0.5, 'II': 1.0, 'III': 1.5, 'IV': 2.0,
    'V': 2.5, 'VI': 3.0, 'VII': 3.5, 'VIII': 4.0
};

const mapUrls = {
    'main': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/karta1.jpg',
    'krym': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/karta2.jpg',
    'sakhalin': 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/karta3.jpg'
};

const roofImages = {
    'single_slope': '1_–û–¥–Ω–æ—Å–∫–∞—Ç–Ω–∞—è.png',
    'pitched': '2_–î–≤—É—Å–∫–∞—Ç–Ω–∞—è.png',
    'arched': '3_–°–≤–æ–¥—á–∞—Ç–∞—è.png',
    'pointed': '4_–°—Ç—Ä–µ–ª—å—á–∞—Ç–∞—è.png',
    'lantern': '5_–° —Ñ–æ–Ω–∞—Ä—è–º–∏.png',
    'long_lantern': '6_–° –ø—Ä–æ–¥–æ–ª—å–Ω—ã–º–∏ —Ñ–æ–Ω–∞—Ä—è–º–∏.png',
    'shed': '7_–®–µ–¥–æ–≤—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è.png',
    'multi_pitched': '8_–ú–Ω–æ–≥–æ–ø—Ä–æ–ª—ë—Ç–Ω—ã–µ –¥–≤—É—Å–∫–∞—Ç–Ω—ã–µ.png',
    'multi_arched': '9_–ú–Ω–æ–≥–æ–ø—Ä–æ–ª—ë—Ç–Ω—ã–µ —Å–≤–æ–¥—á–∞—Ç—ã–µ.png',
    'multi_lantern': '10_–ú–Ω–æ–≥–æ–ø—Ä–æ–ª—ë—Ç–Ω—ã–µ —Å —Ñ–æ–Ω–∞—Ä—è–º–∏.png',
    'height_drop': '11_–° –ø–µ—Ä–µ–ø–∞–¥–æ–º –≤—ã—Å–æ—Ç—ã.png',
    'double_height_drop': '12_–° –¥–≤—É–º—è –ø–µ—Ä–µ–ø–∞–¥–∞–º–∏ –≤—ã—Å–æ—Ç—ã.png',
    'cylindrical': '13_–í–∏—Å—è—á–∏–µ —Ü–∏–ª–∏–Ω–¥—Ä–∏—á–µ—Å–∫–æ–π —Ñ–æ—Ä–º—ã.png',
    'dome': '14_–ö—É–ø–æ–ª—å–Ω—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è.png',
    'cone': '15_–ö–æ–Ω–∏—á–µ—Å–∫–∏–µ –∫—Ä—É–≥–æ–≤—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è.png',
    'parapet': '16_–ü–∞—Ä–∞–ø–µ—Ç—ã.png',
    'heightened': '17_–£—á–∞—Å—Ç–∫–∏ –ø—Ä–∏ –≤–æ–∑–≤—ã—à–∞—é—â–∏—Ö—Å—è –Ω–∞–¥—Å—Ç—Ä–æ–π–∫–∞—Ö.png'
};

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
let currentStep = 1;
let sgValue = 1.5;
let ceValue = 1.0;
let ctValue = 1.0;
let muValue = 1.0;
let kbValue = 1.0;
let gammaF = 1.4;
let isMountainArea = false;
let altitude = 500;
let mountainRegion = '';
let currentCity = '';
let currentTemperature = null;
let currentSgMethod = 'manual';

// –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
const baseImageUrl = 'https://raw.githubusercontent.com/Tifilin/ingenerstroitel/refs/heads/main/';

// –§–£–ù–ö–¶–ò–ò –ù–ê–í–ò–ì–ê–¶–ò–ò
function showStep(stepNumber) {
    document.querySelectorAll('.step').forEach(step => {
        step.classList.remove('active');
    });
    document.getElementById(`step${stepNumber}`).classList.add('active');
    currentStep = stepNumber;
    window.scrollTo({ top: 0, behavior: 'smooth' });
}

function nextStep(nextStepNumber) {
    showStep(nextStepNumber);
}

function prevStep(prevStepNumber) {
    showStep(prevStepNumber);
}

// –ë–ê–ó–û–í–´–ï –§–£–ù–ö–¶–ò–ò –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–Ø –ú–ï–¢–û–î–û–í
function toggleSgMethod() {
    const method = document.querySelector('input[name="sgMethod"]:checked').value;
    currentSgMethod = method;
    document.getElementById('sgManualInput').style.display = method === 'manual' ? 'block' : 'none';
    document.getElementById('sgSpCalculation').style.display = method === 'sp' ? 'block' : 'none';
}

function toggleCeMethod() {
    const method = document.querySelector('input[name="ceMethod"]:checked').value;
    document.getElementById('ceManualInput').style.display = method === 'manual' ? 'block' : 'none';
    document.getElementById('ceSpCalculation').style.display = method === 'sp' ? 'block' : 'none';
    if (method === 'sp') {
        updateCe();
    }
}

function toggleCtMethod() {
    const method = document.querySelector('input[name="ctMethod"]:checked').value;
    document.getElementById('ctManualInput').style.display = method === 'manual' ? 'block' : 'none';
    document.getElementById('ctSpCalculation').style.display = method === 'sp' ? 'block' : 'none';
    if (method === 'sp') {
        updateCt();
    }
}

function toggleMuMethod() {
    const method = document.querySelector('input[name="muMethod"]:checked').value;
    document.getElementById('muManualInput').style.display = method === 'manual' ? 'block' : 'none';
    document.getElementById('muSpCalculation').style.display = method === 'sp' ? 'block' : 'none';
    if (method === 'sp') {
        updateMu();
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ä—Ç–æ–π
function showSpMethod(method) {
    const cityMethod = document.getElementById('cityMethod');
    const mapMethod = document.getElementById('mapMethod');
    const mapToggleBtn = document.getElementById('mapToggleBtn');
    
    if (method === 'city') {
        cityMethod.style.display = 'block';
        mapMethod.style.display = 'none';
        if (mapToggleBtn) mapToggleBtn.style.display = 'none';
        setFromCity();
    } else {
        cityMethod.style.display = 'none';
        mapMethod.style.display = 'block';
        if (mapToggleBtn) mapToggleBtn.style.display = 'inline-block';
    }
}

function toggleMap(id) {
    const elem = document.getElementById(id);
    elem.style.display = elem.style.display === 'none' ? 'block' : 'none';
    const btn = document.getElementById('mapToggleBtn');
    if (btn) {
        btn.textContent = elem.style.display === 'none' ? 'üó∫Ô∏è –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ä—Ç—É' : 'üó∫Ô∏è –°–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç—É';
    }
}

function updateMapSrc() {
    const type = document.getElementById('mapType').value;
    const mapImg = document.getElementById('snowMap');
    mapImg.src = mapUrls[type];
    mapImg.onerror = function() {
        this.style.display = 'none';
        console.warn('–ö–∞—Ä—Ç–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', this.src);
    };
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥–æ—Ä–æ–¥–∞–º–∏
function setFromCity() {
    const select = document.getElementById('citySelect');
    const option = select.options[select.selectedIndex];
    currentCity = option.value;
    const district = option.getAttribute('data-district');
    const temp = option.getAttribute('data-temp') || null;
    
    currentTemperature = temp ? parseFloat(temp) : null;
    
    if (district) {
        sgValue = sgValues[district] || 1.5;
        document.getElementById('sgValue').textContent = sgValue;
    }
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –≤ —Å–µ–ª–µ–∫—Ç–µ
    if (currentTemperature !== null) {
        const tempSelect = document.getElementById('januaryTemp');
        tempSelect.value = currentTemperature <= -5 ? 'cold' : 'warm';
    }
    
    updateTemperatureInfo();
    updateCe();
}

function updateSgFromMap() {
    const district = document.getElementById('snowDistrictMap').value;
    sgValue = sgValues[district] || 1.5;
    document.getElementById('sgValue').textContent = sgValue;
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ Ce —Å–æ–≥–ª–∞—Å–Ω–æ –ø.10.5-10.9 –°–ü 20.13330.2016
function updateCe() {
    const terrain = document.getElementById('terrainType').value;
    const protected = document.getElementById('protected').checked;
    const dimMin = parseFloat(document.getElementById('dimMin').value) || 50;
    const dimMax = parseFloat(document.getElementById('dimMax').value) || 50;
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤
    const dimensionError = document.getElementById('dimensionError');
    if (dimMin > dimMax) {
        dimensionError.style.display = 'block';
        document.getElementById('ceValue').textContent = '‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–∞–∑–º–µ—Ä–∞—Ö';
        document.getElementById('ceCalculationDetails').innerHTML = '<p class="warning">–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ —Ä–∞–∑–º–µ—Ä—ã –ø–æ–∫—Ä—ã—Ç–∏—è</p>';
        return;
    } else {
        dimensionError.style.display = 'none';
    }
    
    const Ce = calculateCe(terrain, dimMin, dimMax, protected);
    ceValue = Ce;
    document.getElementById('ceValue').textContent = `–†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ Ce: ${Ce.toFixed(2)}`;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏ —Ä–∞—Å—á–µ—Ç–∞
    let details = '';
    if (protected) {
        details = '<p class="note">üè† –ó–¥–∞–Ω–∏–µ –∑–∞—â–∏—â–µ–Ω–æ –æ—Ç –≤–µ—Ç—Ä–∞ - –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è Ce = 1.0 —Å–æ–≥–ª–∞—Å–Ω–æ –ø.10.6 –°–ü 20.13330.2016</p>';
    } else {
        details = `<p class="note">üìè –†–∞–∑–º–µ—Ä—ã –ø–æ–∫—Ä—ã—Ç–∏—è: ${dimMin}√ó${dimMax} –º, —Ç–∏–ø –º–µ—Å—Ç–Ω–æ—Å—Ç–∏: ${terrain}</p>`;
        details += `<p class="italic">–†–∞—Å—á–µ—Ç –ø–æ –ø.10.7 –°–ü 20.13330.2016</p>`;
    }
    document.getElementById('ceCalculationDetails').innerHTML = details;
}

// –§–£–ù–ö–¶–ò–Ø –†–ê–°–ß–ï–¢–ê Ce —Å–æ–≥–ª–∞—Å–Ω–æ –ø.10.5-10.9 –°–ü 20.13330.2016
function calculateCe(terrain, dimMin, dimMax, protected) {
    // –°–æ–≥–ª–∞—Å–Ω–æ –ø.10.6 –°–ü 20.13330.2016
    if (protected) return 1.0;
    
    const l = Math.min(dimMin, dimMax);
    const L = Math.max(dimMin, dimMax);
    
    // –ü–†–ê–í–ò–õ–¨–ù–´–ô —Ä–∞—Å—á–µ—Ç –ø–æ –°–ü 20.13330.2016 –ø.10.7
    if (terrain === 'A') {
        if (l <= 50 && L <= 100) return 0.7;
        if (l > 100 || L > 200) return 1.0;
        return 0.85;
    } else if (terrain === 'B') {
        if (l <= 50 && L <= 100) return 0.7;
        if (l > 100 || L > 200) return 1.0;
        return 0.85;
    } else if (terrain === 'C') {
        return 1.0; // –î–ª—è —Ç–∏–ø–∞ C –≤—Å–µ–≥–¥–∞ 1.0
    }
    
    return 1.0;
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π
function updateTemperatureInfo() {
    const temperatureInfo = document.getElementById('temperatureInfo');
    const tempSelect = document.getElementById('januaryTemp');
    
    let temperatureHTML = '';
    
    if (tempSelect.value === 'cold') {
        temperatureHTML = `
            <p>‚úÖ –•–æ–ª–æ–¥–Ω—ã–π —Ä–µ–≥–∏–æ–Ω - –ø–æ–Ω–∏–∂–µ–Ω–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Å–æ–≥–ª–∞—Å–Ω–æ –ø.10.11</p>
            <p class="italic">${currentCity ? `–î–ª—è –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ ${currentCity}` : '–î–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞'}</p>
        `;
    } else if (tempSelect.value === 'warm') {
        temperatureHTML = `
            <p>‚ùå –¢–µ–ø–ª—ã–π —Ä–µ–≥–∏–æ–Ω - –ø–æ–Ω–∏–∂–µ–Ω–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ –Ω–µ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è —Å–æ–≥–ª–∞—Å–Ω–æ –ø.10.11</p>
            <p class="italic">${currentCity ? `–î–ª—è –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ ${currentCity}` : '–î–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞'}</p>
        `;
    } else {
        temperatureHTML = `
            <p class="italic">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∏–º—ã –≤—Ä—É—á–Ω—É—é –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø–æ–Ω–∏–∂–µ–Ω–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –ø.10.11 –°–ü 20.13330.2016</p>
        `;
    }
    
    if (temperatureInfo) {
        temperatureInfo.innerHTML = temperatureHTML;
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ Ct —Å–æ–≥–ª–∞—Å–Ω–æ –ø.10.10 –°–ü 20.13330.2016
function updateCt() {
    const ctType = document.querySelector('input[name="ctType"]:checked').value;
    
    let ct = 1.0;
    let calculationDetails = '';
    
    // –°–æ–≥–ª–∞—Å–Ω–æ –ø.10.10 –°–ü 20.13330.2016
    switch(ctType) {
        case 'normal':
            ct = 1.0;
            calculationDetails = 'Ct = 1.0 (–æ–±—ã—á–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ —Å —É—Ç–µ–ø–ª–µ–Ω–∏–µ–º) —Å–æ–≥–ª–∞—Å–Ω–æ –ø.10.10 –°–ü 20.13330.2016';
            break;
        case 'transparent':
            ct = 1.0;
            calculationDetails = 'Ct = 1.0 (–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è) —Å–æ–≥–ª–∞—Å–Ω–æ –ø.10.10 –°–ü 20.13330.2016';
            break;
        case 'highLoss':
            ct = 0.8;
            calculationDetails = 'Ct = 0.8 (–ø–æ–∫—Ä—ã—Ç–∏—è —Å –ø–æ–≤—ã—à–µ–Ω–Ω—ã–º–∏ —Ç–µ–ø–ª–æ–≤—ã–º–∏ –ø–æ—Ç–µ—Ä—è–º–∏) —Å–æ–≥–ª–∞—Å–Ω–æ –ø.10.10 –°–ü 20.13330.2016';
            break;
        case 'cold':
            ct = 1.0;
            calculationDetails = 'Ct = 1.0 (—Ö–æ–ª–æ–¥–Ω—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è) —Å–æ–≥–ª–∞—Å–Ω–æ –ø.10.10 –°–ü 20.13330.2016';
            break;
    }
    
    ctValue = ct;
    document.getElementById('ctValue').textContent = `–†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ Ct: ${ct.toFixed(2)}`;
    document.getElementById('ctCalculationDetails').innerHTML = `<div class="detailed-explanation">${calculationDetails}</div>`;
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ Œº
function showParams() {
    const type = document.getElementById('roofType').value;
    const ref = document.getElementById('roofType').options[document.getElementById('roofType').selectedIndex].getAttribute('data-ref');
    
    document.getElementById('roofRef').textContent = `–°—Å—ã–ª–∫–∞ –Ω–∞ –°–ü: ${ref}`;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    const roofImage = document.getElementById('roofImage');
    const imageName = roofImages[type];
    if (imageName) {
        roofImage.src = baseImageUrl + imageName;
        roofImage.onerror = function() {
            this.src = 'https://via.placeholder.com/400x250/3498db/ffffff?text=–°—Ö–µ–º–∞+–Ω–µ+–¥–æ—Å—Ç—É–ø–Ω–∞';
            console.warn('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ö–µ–º—ã –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ:', this.src);
        };
        roofImage.alt = `–°—Ö–µ–º–∞ –ø–æ–∫—Ä—ã—Ç–∏—è: ${type}`;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–≤–æ–¥–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞
    let paramsHTML = '';
    
    switch(type) {
        case 'single_slope':
        case 'pitched':
        case 'pointed':
        case 'shed':
        case 'multi_pitched':
            paramsHTML = '<label>–£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ –∫—Ä—ã—à–∏ Œ± (¬∞): <input type="number" id="roofAngle" min="0" max="90" value="30" onchange="updateMu()"></label>';
            break;
        case 'arched':
        case 'multi_arched':
            paramsHTML = `
                <label>–£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ –∫—Ä—ã—à–∏ Œ± (¬∞): <input type="number" id="roofAngle" min="0" max="90" value="30" onchange="updateMu()"></label>
                <label>–û—Ç–Ω–æ—à–µ–Ω–∏–µ f/l: <input type="number" id="archRatio" step="0.01" min="0" max="1" value="0.1" onchange="updateMu()"></label>
            `;
            break;
        case 'lantern':
        case 'long_lantern':
        case 'multi_lantern':
            paramsHTML = `
                <label>–£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ –∫—Ä—ã—à–∏ Œ± (¬∞): <input type="number" id="roofAngle" min="0" max="90" value="30" onchange="updateMu()"></label>
                <label>–í—ã—Å–æ—Ç–∞ —Ñ–æ–Ω–∞—Ä—è h (–º): <input type="number" id="lanternHeight" min="0" value="2" onchange="updateMu()"></label>
                <label>–®–∏—Ä–∏–Ω–∞ —Ñ–æ–Ω–∞—Ä—è b (–º): <input type="number" id="lanternWidth" min="0" value="3" onchange="updateMu()"></label>
                <label>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Ñ–æ–Ω–∞—Ä—è–º–∏ (–º): <input type="number" id="lanternDistance" min="0" value="6" onchange="updateMu()"></label>
            `;
            break;
        case 'height_drop':
            paramsHTML = `
                <label>–í—ã—Å–æ—Ç–∞ –ø–µ—Ä–µ–ø–∞–¥–∞ h (–º): <input type="number" id="heightDrop" min="0" value="2" onchange="updateMu()"></label>
                <label>–î–ª–∏–Ω–∞ —Å–∫–∞—Ç–∞ –≤–µ—Ä—Ö–Ω–µ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è l1 (–º): <input type="number" id="lengthUpper" min="0" value="10" onchange="updateMu()"></label>
                <label>–î–ª–∏–Ω–∞ —Å–∫–∞—Ç–∞ –Ω–∏–∂–Ω–µ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è l2 (–º): <input type="number" id="lengthLower" min="0" value="10" onchange="updateMu()"></label>
            `;
            break;
        case 'double_height_drop':
            paramsHTML = `
                <label>–í—ã—Å–æ—Ç–∞ –ø–µ—Ä–≤–æ–≥–æ –ø–µ—Ä–µ–ø–∞–¥–∞ h1 (–º): <input type="number" id="heightDrop1" min="0" value="2" onchange="updateMu()"></label>
                <label>–í—ã—Å–æ—Ç–∞ –≤—Ç–æ—Ä–æ–≥–æ –ø–µ—Ä–µ–ø–∞–¥–∞ h2 (–º): <input type="number" id="heightDrop2" min="0" value="2" onchange="updateMu()"></label>
                <label>–î–ª–∏–Ω–∞ —Å–∫–∞—Ç–æ–≤ (–º): <input type="number" id="lengthSlope" min="0" value="10" onchange="updateMu()"></label>
            `;
            break;
        case 'cylindrical':
            paramsHTML = '<label>–£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ –æ–±—Ä–∞–∑—É—é—â–µ–π Œ± (¬∞): <input type="number" id="cylindricalAngle" min="0" max="90" value="30" onchange="updateMu()"></label>';
            break;
        case 'dome':
            paramsHTML = '<label>–û—Ç–Ω–æ—à–µ–Ω–∏–µ f/d: <input type="number" id="domeRatio" step="0.01" min="0" max="0.5" value="0.1" onchange="updateMu()"></label>';
            break;
        case 'cone':
            paramsHTML = '<label>–£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ –æ–±—Ä–∞–∑—É—é—â–µ–π Œ± (¬∞): <input type="number" id="coneAngle" min="0" max="90" value="30" onchange="updateMu()"></label>';
            break;
        case 'parapet':
            paramsHTML = `
                <label>–í—ã—Å–æ—Ç–∞ –ø–∞—Ä–∞–ø–µ—Ç–∞ h (–º): <input type="number" id="parapetHeight" min="0" value="1" onchange="updateMu()"></label>
                <label>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –ø–∞—Ä–∞–ø–µ—Ç–∞ s (–º): <input type="number" id="parapetDistance" min="0" value="2" onchange="updateMu()"></label>
            `;
            break;
        case 'heightened':
            paramsHTML = `
                <label>–í—ã—Å–æ—Ç–∞ –Ω–∞–¥—Å—Ç—Ä–æ–π–∫–∏ h (–º): <input type="number" id="heightenedHeight" min="0" value="3" onchange="updateMu()"></label>
                <label>–®–∏—Ä–∏–Ω–∞ –Ω–∞–¥—Å—Ç—Ä–æ–π–∫–∏ b (–º): <input type="number" id="heightenedWidth" min="0" value="5" onchange="updateMu()"></label>
            `;
            break;
        default:
            paramsHTML = '<label>–î–∞–Ω–Ω—ã–π —Ç–∏–ø –ø–æ–∫—Ä—ã—Ç–∏—è —Ç—Ä–µ–±—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞</label>';
    }
    
    document.getElementById('roofParams').innerHTML = paramsHTML;
    updateMu();
}

function updateMu() {
    const type = document.getElementById('roofType').value;
    let muResults = {};
    let details = '';
    
    switch(type) {
        case 'single_slope':
            const angleSingle = parseFloat(document.getElementById('roofAngle').value) || 0;
            muResults = calculateMuForSingleSlope(angleSingle);
            details = `–û–¥–Ω–æ—Å–∫–∞—Ç–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ, —É–≥–æ–ª ${angleSingle}¬∞`;
            break;
        case 'pitched':
            const anglePitched = parseFloat(document.getElementById('roofAngle').value) || 0;
            muResults = calculateMuForPitchedRoof(anglePitched);
            details = `–î–≤—É—Å–∫–∞—Ç–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ, —É–≥–æ–ª ${anglePitched}¬∞`;
            break;
        case 'pointed':
            const anglePointed = parseFloat(document.getElementById('roofAngle').value) || 0;
            muResults = calculateMuForPointedRoof(anglePointed);
            details = `–°—Ç—Ä–µ–ª—å—á–∞—Ç–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ, —É–≥–æ–ª ${anglePointed}¬∞`;
            break;
        case 'arched':
            const angleArched = parseFloat(document.getElementById('roofAngle').value) || 0;
            const ratioArched = parseFloat(document.getElementById('archRatio').value) || 0.1;
            muResults = calculateMuForArchedRoof(angleArched, ratioArched);
            details = `–°–≤–æ–¥—á–∞—Ç–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ, —É–≥–æ–ª ${angleArched}¬∞, f/l=${ratioArched}`;
            break;
        case 'lantern':
            const angleLantern = parseFloat(document.getElementById('roofAngle').value) || 0;
            const heightLantern = parseFloat(document.getElementById('lanternHeight').value) || 2;
            const widthLantern = parseFloat(document.getElementById('lanternWidth').value) || 3;
            const distanceLantern = parseFloat(document.getElementById('lanternDistance').value) || 6;
            muResults = calculateMuForLanternRoof(angleLantern, heightLantern, widthLantern, distanceLantern);
            details = `–ü–æ–∫—Ä—ã—Ç–∏–µ —Å —Ñ–æ–Ω–∞—Ä—è–º–∏, —É–≥–æ–ª ${angleLantern}¬∞, h=${heightLantern}–º, b=${widthLantern}–º`;
            break;
        case 'shed':
            const angleShed = parseFloat(document.getElementById('roofAngle').value) || 0;
            muResults = calculateMuForShedRoof(angleShed);
            details = `–®–µ–¥–æ–≤–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ, —É–≥–æ–ª ${angleShed}¬∞`;
            break;
        case 'multi_pitched':
            const angleMulti = parseFloat(document.getElementById('roofAngle').value) || 0;
            muResults = calculateMuForMultiPitchedRoof(angleMulti);
            details = `–ú–Ω–æ–≥–æ–ø—Ä–æ–ª–µ—Ç–Ω–æ–µ –¥–≤—É—Å–∫–∞—Ç–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ, —É–≥–æ–ª ${angleMulti}¬∞`;
            break;
        case 'multi_arched':
            const angleMultiArched = parseFloat(document.getElementById('roofAngle').value) || 0;
            const ratioMultiArched = parseFloat(document.getElementById('archRatio').value) || 0.1;
            muResults = calculateMuForMultiArchedRoof(angleMultiArched, ratioMultiArched);
            details = `–ú–Ω–æ–≥–æ–ø—Ä–æ–ª–µ—Ç–Ω–æ–µ —Å–≤–æ–¥—á–∞—Ç–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ, —É–≥–æ–ª ${angleMultiArched}¬∞, f/l=${ratioMultiArched}`;
            break;
        case 'height_drop':
            const h = parseFloat(document.getElementById('heightDrop').value) || 2;
            const l1 = parseFloat(document.getElementById('lengthUpper').value) || 10;
            const l2 = parseFloat(document.getElementById('lengthLower').value) || 10;
            muResults = calculateMuForHeightDrop(h, l1, l2);
            details = `–ü–æ–∫—Ä—ã—Ç–∏–µ —Å –ø–µ—Ä–µ–ø–∞–¥–æ–º –≤—ã—Å–æ—Ç—ã, h=${h}–º, l1=${l1}–º, l2=${l2}–º`;
            break;
        case 'parapet':
            const parapetHeight = parseFloat(document.getElementById('parapetHeight').value) || 1;
            const parapetDistance = parseFloat(document.getElementById('parapetDistance').value) || 2;
            muResults = calculateMuForParapet(parapetHeight, parapetDistance);
            details = `–ü–∞—Ä–∞–ø–µ—Ç –≤—ã—Å–æ—Ç–æ–π ${parapetHeight}–º, —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ ${parapetDistance}–º`;
            break;
        case 'cone':
            const coneAngle = parseFloat(document.getElementById('coneAngle').value) || 30;
            muResults = calculateMuForConeRoof(coneAngle);
            details = `–ö–æ–Ω–∏—á–µ—Å–∫–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ, —É–≥–æ–ª ${coneAngle}¬∞`;
            break;
        default:
            muResults = {
                '–°—Ö–µ–º–∞ 1 (—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–∞—è)': {
                    'Œº': '1.0',
                    '–æ–ø–∏—Å–∞–Ω–∏–µ': '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é',
                    '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–û–±—â–∏–π —Ä–∞—Å—á–µ—Ç'
                }
            };
            details = '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: Œº = 1.0';
    }
    
    displayMuSchemes(muResults);
    const muCalculationDetails = document.getElementById('muCalculationDetails');
    if (muCalculationDetails) {
        muCalculationDetails.innerHTML = `<p class="note">${details}</p>`;
    }
}

// –î–ï–¢–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –†–ê–°–ß–ï–¢–ê Œº –ü–û –°–ü 20.13330.2016
function calculateMuForSingleSlope(angle) {
    const mu = calculateBaseMu(angle);
    
    return {
        '–°—Ö–µ–º–∞ –ë.1 (–≤–∞—Ä–∏–∞–Ω—Ç 1)': {
            'Œº': mu.toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–û–¥–Ω–æ—Å–∫–∞—Ç–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.1 (–≤–∞—Ä–∏–∞–Ω—Ç 1). –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ Œ± = ${angle}¬∞. –†–∞—Å—á–µ—Ç –ø–æ —Ç–∞–±–ª–∏—Ü–µ –ë.1 –°–ü 20.13330.2016: Œº = ${mu.toFixed(2)}`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏'
        }
    };
}

// –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –†–ê–°–ß–ï–¢–ê –î–õ–Ø –î–í–£–°–ö–ê–¢–ù–û–ô –ö–†–´–®–ò
function calculateMuForPitchedRoof(angle) {
    const mu = calculateBaseMu(angle);
    
    const results = {
        '–°—Ö–µ–º–∞ –ë.1 (–≤–∞—Ä–∏–∞–Ω—Ç 1) - –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ–≥–∏–±–æ–≤': {
            'Œº‚ÇÅ (–ª–µ–≤—ã–π —Å–∫–∞—Ç)': mu.toFixed(2),
            'Œº‚ÇÇ (–ø—Ä–∞–≤—ã–π —Å–∫–∞—Ç)': mu.toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–î–≤—É—Å–∫–∞—Ç–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.1 (–≤–∞—Ä–∏–∞–Ω—Ç 1). –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ Œ± = ${angle}¬∞. –†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: Œº‚ÇÅ = Œº‚ÇÇ = ${mu.toFixed(2)} —Å–æ–≥–ª–∞—Å–Ω–æ –ø.–ë.1 –°–ü 20.13330.2016`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ–≥–∏–±–æ–≤ –∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–π'
        }
    };
    
    // –í–∞—Ä–∏–∞–Ω—Ç 2 —Å–æ–≥–ª–∞—Å–Ω–æ –ø.–ë.1 –±) –°–ü 20.13330.2016
    if (angle >= 15 && angle <= 40) {
        results['–°—Ö–µ–º–∞ –ë.1 (–≤–∞—Ä–∏–∞–Ω—Ç 2) - –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏'] = {
            'Œº‚ÇÅ (–Ω–∞–≤–µ—Ç—Ä–µ–Ω–Ω—ã–π —Å–∫–∞—Ç)': (0.75 * mu).toFixed(2),
            'Œº‚ÇÇ (–ø–æ–¥–≤–µ—Ç—Ä–µ–Ω–Ω—ã–π —Å–∫–∞—Ç)': (1.25 * mu).toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–î–≤—É—Å–∫–∞—Ç–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.1 (–≤–∞—Ä–∏–∞–Ω—Ç 2). –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ Œ± = ${angle}¬∞. –ù–µ—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: Œº‚ÇÅ = 0.75√ó${mu.toFixed(2)} = ${(0.75 * mu).toFixed(2)}, Œº‚ÇÇ = 1.25√ó${mu.toFixed(2)} = ${(1.25 * mu).toFixed(2)} —Å–æ–≥–ª–∞—Å–Ω–æ –ø.–ë.1 –±) –°–ü 20.13330.2016`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏ –ø—Ä–∏ 15¬∞‚â§Œ±‚â§40¬∞'
        };
    }
    
    // –í–∞—Ä–∏–∞–Ω—Ç 3 —Å–æ–≥–ª–∞—Å–Ω–æ –ø.–ë.1 –±) –°–ü 20.13330.2016
    if (angle >= 10 && angle <= 30) {
        results['–°—Ö–µ–º–∞ –ë.1 (–≤–∞—Ä–∏–∞–Ω—Ç 3) - —Å —Ö–æ–¥–æ–≤—ã–º–∏ –º–æ—Å—Ç–∏–∫–∞–º–∏'] = {
            'Œº‚ÇÅ (–æ–¥–∏–Ω —Å–∫–∞—Ç)': (0.6 * mu).toFixed(2),
            'Œº‚ÇÇ (–¥—Ä—É–≥–æ–π —Å–∫–∞—Ç)': (1.4 * mu).toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–î–≤—É—Å–∫–∞—Ç–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.1 (–≤–∞—Ä–∏–∞–Ω—Ç 3). –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ Œ± = ${angle}¬∞. –ù–µ—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: Œº‚ÇÅ = 0.6√ó${mu.toFixed(2)} = ${(0.6 * mu).toFixed(2)}, Œº‚ÇÇ = 1.4√ó${mu.toFixed(2)} = ${(1.4 * mu).toFixed(2)} —Å–æ–≥–ª–∞—Å–Ω–æ –ø.–ë.1 –±) –°–ü 20.13330.2016`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏ –ø—Ä–∏ 10¬∞‚â§Œ±‚â§30¬∞ —Å —Ö–æ–¥–æ–≤—ã–º–∏ –º–æ—Å—Ç–∏–∫–∞–º–∏'
        };
    }
    
    return results;
}

function calculateMuForArchedRoof(angle, ratio) {
    const muArch = calculateArchMu(ratio);
    
    return {
        '–°—Ö–µ–º–∞ –ë.2 (–≤–∞—Ä–∏–∞–Ω—Ç 1)': {
            'Œº': muArch.toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–°–≤–æ–¥—á–∞—Ç–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.2 (–≤–∞—Ä–∏–∞–Ω—Ç 1). –£–≥–æ–ª ${angle}¬∞, –æ—Ç–Ω–æ—à–µ–Ω–∏–µ f/l = ${ratio}. –†–∞—Å—á–µ—Ç –ø–æ —Ñ–æ—Ä–º—É–ª–µ –ë.1 –°–ü 20.13330.2016: Œº = ${muArch.toFixed(2)}`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è'
        },
        '–°—Ö–µ–º–∞ –ë.2 (–≤–∞—Ä–∏–∞–Ω—Ç 2)': {
            'Œº –Ω–∞ —É—á–∞—Å—Ç–∫–µ 0-0.5l': '0.5',
            'Œº –Ω–∞ —É—á–∞—Å—Ç–∫–µ 0.5l-l': '1.0',
            'Œº –Ω–∞ —É—á–∞—Å—Ç–∫–µ l-1.5l': '1.5',
            'Œº –Ω–∞ —É—á–∞—Å—Ç–∫–µ 1.5l-2l': '1.0',
            'Œº –Ω–∞ —É—á–∞—Å—Ç–∫–µ 2l-2.5l': '0.5',
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–°–≤–æ–¥—á–∞—Ç–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.2 (–≤–∞—Ä–∏–∞–Ω—Ç 2). –£–≥–æ–ª ${angle}¬∞, –æ—Ç–Ω–æ—à–µ–Ω–∏–µ f/l = ${ratio}. –ù–µ—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –¥–ª–∏–Ω–µ –ø–æ–∫—Ä—ã—Ç–∏—è —Å–æ–≥–ª–∞—Å–Ω–æ –ø.–ë.2 –°–ü 20.13330.2016`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏'
        }
    };
}

function calculateMuForLanternRoof(angle, height, width, distance) {
    const mu = calculateBaseMu(angle);
    const b = width;
    const h = height;
    const l = distance;
    
    // –†–∞—Å—á–µ—Ç –ø–æ –ø.–ë.3 –°–ü 20.13330.2016
    const mu1 = Math.min(2 * h / b, 4).toFixed(2);
    const mu2 = Math.min(2 * h / l, 4).toFixed(2);
    const mu3 = Math.min(2 * h / b, 2).toFixed(2);
    
    return {
        '–°—Ö–µ–º–∞ –ë.3 (–≤–∞—Ä–∏–∞–Ω—Ç 1)': {
            'Œº –≤ –∑–æ–Ω–µ A': mu.toFixed(2),
            'Œº‚ÇÅ –≤ –∑–æ–Ω–µ B': Math.max(mu, parseFloat(mu2)).toFixed(2),
            'Œº‚ÇÇ –≤ –∑–æ–Ω–µ C': Math.max(mu, parseFloat(mu1), parseFloat(mu2)).toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–ü–æ–∫—Ä—ã—Ç–∏–µ —Å —Ñ–æ–Ω–∞—Ä—è–º–∏ –ø–æ —Å—Ö–µ–º–µ –ë.3 (–≤–∞—Ä–∏–∞–Ω—Ç 1). h=${h}–º, b=${b}–º, l=${l}–º. –†–∞—Å—á–µ—Ç –ø–æ —Ñ–æ—Ä–º—É–ª–∞–º –ë.2 –°–ü 20.13330.2016: Œº‚ÇÅ = max(${mu.toFixed(2)}, 2h/l=${mu2}) = ${Math.max(mu, parseFloat(mu2)).toFixed(2)}, Œº‚ÇÇ = max(${mu.toFixed(2)}, 2h/b=${mu1}, 2h/l=${mu2}) = ${Math.max(mu, parseFloat(mu1), parseFloat(mu2)).toFixed(2)}`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è'
        },
        '–°—Ö–µ–º–∞ –ë.3 (–≤–∞—Ä–∏–∞–Ω—Ç 2)': {
            'Œº –Ω–∞ –ø–æ–∫—Ä—ã—Ç–∏–∏ —Ñ–æ–Ω–∞—Ä—è': mu1,
            'Œº —É —Ç–æ—Ä—Ü–æ–≤ —Ñ–æ–Ω–∞—Ä—è': mu2,
            'Œº –≤ –∑–æ–Ω–µ B': mu3,
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–ü–æ–∫—Ä—ã—Ç–∏–µ —Å —Ñ–æ–Ω–∞—Ä—è–º–∏ –ø–æ —Å—Ö–µ–º–µ –ë.3 (–≤–∞—Ä–∏–∞–Ω—Ç 2). –†–∞—Å—á–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ –¥–ª—è —Ñ–æ–Ω–∞—Ä–µ–π –ø–æ —Ñ–æ—Ä–º—É–ª–∞–º –ë.2 –°–ü 20.13330.2016: Œº = 2h/b = ${mu1} (–Ω–æ –Ω–µ –±–æ–ª–µ–µ 4), Œº = 2h/l = ${mu2} (–Ω–æ –Ω–µ –±–æ–ª–µ–µ 4), Œº –≤ –∑–æ–Ω–µ B = 2h/b = ${mu3} (–Ω–æ –Ω–µ –±–æ–ª–µ–µ 2)`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è –ø–æ–∫—Ä—ã—Ç–∏—è —Ñ–æ–Ω–∞—Ä–µ–π'
        }
    };
}

function calculateMuForShedRoof(angle) {
    const mu = calculateBaseMu(angle);
    
    return {
        '–°—Ö–µ–º–∞ –ë.5 (–≤–∞—Ä–∏–∞–Ω—Ç 1)': {
            'Œº –≤ –∑–æ–Ω–µ A': mu.toFixed(2),
            'Œº‚ÇÅ –≤ –∑–æ–Ω–µ B': (1.4 * mu).toFixed(2),
            'Œº‚ÇÇ –≤ –∑–æ–Ω–µ C': (0.6 * mu).toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–®–µ–¥–æ–≤–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.5 (–≤–∞—Ä–∏–∞–Ω—Ç 1). –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ Œ± = ${angle}¬∞. –†–∞—Å—á–µ—Ç: Œº‚ÇÅ = 1.4√ó${mu.toFixed(2)} = ${(1.4 * mu).toFixed(2)}, Œº‚ÇÇ = 0.6√ó${mu.toFixed(2)} = ${(0.6 * mu).toFixed(2)} —Å–æ–≥–ª–∞—Å–Ω–æ –ø.–ë.5 –°–ü 20.13330.2016`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏'
        },
        '–°—Ö–µ–º–∞ –ë.5 (–≤–∞—Ä–∏–∞–Ω—Ç 2)': {
            'Œº –≤ –∑–æ–Ω–µ A': mu.toFixed(2),
            'Œº‚ÇÅ –≤ –∑–æ–Ω–µ B': (0.6 * mu).toFixed(2),
            'Œº‚ÇÇ –≤ –∑–æ–Ω–µ C': (1.4 * mu).toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–®–µ–¥–æ–≤–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.5 (–≤–∞—Ä–∏–∞–Ω—Ç 2). –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ Œ± = ${angle}¬∞. –†–∞—Å—á–µ—Ç: Œº‚ÇÅ = 0.6√ó${mu.toFixed(2)} = ${(0.6 * mu).toFixed(2)}, Œº‚ÇÇ = 1.4√ó${mu.toFixed(2)} = ${(1.4 * mu).toFixed(2)} —Å–æ–≥–ª–∞—Å–Ω–æ –ø.–ë.5 –°–ü 20.13330.2016`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏'
        }
    };
}

function calculateMuForMultiPitchedRoof(angle) {
    const mu = calculateBaseMu(angle);
    
    return {
        '–°—Ö–µ–º–∞ –ë.6 (–≤–∞—Ä–∏–∞–Ω—Ç 1)': {
            'Œº –Ω–∞ –≤—Å–µ—Ö —Å–∫–∞—Ç–∞—Ö': mu.toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–ú–Ω–æ–≥–æ–ø—Ä–æ–ª–µ—Ç–Ω–æ–µ –¥–≤—É—Å–∫–∞—Ç–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.6 (–≤–∞—Ä–∏–∞–Ω—Ç 1). –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ Œ± = ${angle}¬∞. –†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ–≥–ª–∞—Å–Ω–æ –ø.–ë.6 –°–ü 20.13330.2016`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ–≥–∏–±–æ–≤'
        },
        '–°—Ö–µ–º–∞ –ë.6 (–≤–∞—Ä–∏–∞–Ω—Ç 2)': {
            'Œº‚ÇÅ –Ω–∞ –∫—Ä–∞–π–Ω–∏—Ö —Å–∫–∞—Ç–∞—Ö': (1.4 * mu).toFixed(2),
            'Œº‚ÇÇ –Ω–∞ —Å—Ä–µ–¥–Ω–∏—Ö —Å–∫–∞—Ç–∞—Ö': (0.6 * mu).toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–ú–Ω–æ–≥–æ–ø—Ä–æ–ª–µ—Ç–Ω–æ–µ –¥–≤—É—Å–∫–∞—Ç–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.6 (–≤–∞—Ä–∏–∞–Ω—Ç 2). –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ Œ± = ${angle}¬∞. –†–∞—Å—á–µ—Ç: Œº‚ÇÅ = 1.4√ó${mu.toFixed(2)} = ${(1.4 * mu).toFixed(2)}, Œº‚ÇÇ = 0.6√ó${mu.toFixed(2)} = ${(0.6 * mu).toFixed(2)} —Å–æ–≥–ª–∞—Å–Ω–æ –ø.–ë.6 –°–ü 20.13330.2016`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏'
        }
    };
}

function calculateMuForMultiArchedRoof(angle, ratio) {
    const muArch = calculateArchMu(ratio);
    
    return {
        '–°—Ö–µ–º–∞ –ë.6 (–≤–∞—Ä–∏–∞–Ω—Ç 1)': {
            'Œº –≤–æ –≤—Å–µ—Ö –ø—Ä–æ–ª–µ—Ç–∞—Ö': muArch.toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–ú–Ω–æ–≥–æ–ø—Ä–æ–ª–µ—Ç–Ω–æ–µ —Å–≤–æ–¥—á–∞—Ç–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.6 (–≤–∞—Ä–∏–∞–Ω—Ç 1). –£–≥–æ–ª ${angle}¬∞, –æ—Ç–Ω–æ—à–µ–Ω–∏–µ f/l = ${ratio}. –†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ–≥–ª–∞—Å–Ω–æ –ø.–ë.6 –°–ü 20.13330.2016`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ–≥–∏–±–æ–≤'
        },
        '–°—Ö–µ–º–∞ –ë.6 (–≤–∞—Ä–∏–∞–Ω—Ç 2)': {
            'Œº‚ÇÅ –≤ –∫—Ä–∞–π–Ω–∏—Ö –ø—Ä–æ–ª–µ—Ç–∞—Ö': (1.4 * muArch).toFixed(2),
            'Œº‚ÇÇ –≤ —Å—Ä–µ–¥–Ω–∏—Ö –ø—Ä–æ–ª–µ—Ç–∞—Ö': (0.6 * muArch).toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–ú–Ω–æ–≥–æ–ø—Ä–æ–ª–µ—Ç–Ω–æ–µ —Å–≤–æ–¥—á–∞—Ç–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.6 (–≤–∞—Ä–∏–∞–Ω—Ç 2). –£–≥–æ–ª ${angle}¬∞, –æ—Ç–Ω–æ—à–µ–Ω–∏–µ f/l = ${ratio}. –†–∞—Å—á–µ—Ç: Œº‚ÇÅ = 1.4√ó${muArch.toFixed(2)} = ${(1.4 * muArch).toFixed(2)}, Œº‚ÇÇ = 0.6√ó${muArch.toFixed(2)} = ${(0.6 * muArch).toFixed(2)} —Å–æ–≥–ª–∞—Å–Ω–æ –ø.–ë.6 –°–ü 20.13330.2016`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏'
        }
    };
}

// –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –†–ê–°–ß–ï–¢–ê –î–õ–Ø –ü–ï–†–ï–ü–ê–î–ê –í–´–°–û–¢
function calculateMuForHeightDrop(h, l1, l2) {
    // –ü–†–ê–í–ò–õ–¨–ù–´–ô —Ä–∞—Å—á–µ—Ç –ø–æ –ø.–ë.8 –°–ü 20.13330.2016
    const mu1 = Math.min(2 * h / l1, 2).toFixed(2);
    const mu2 = Math.min(2 * h / l2, 2).toFixed(2);
    const mu3_max = Math.min(2 * h / Math.sqrt(sgValue), 4).toFixed(2);
    
    return {
        '–°—Ö–µ–º–∞ –ë.8 (–≤–∞—Ä–∏–∞–Ω—Ç 1)': {
            'Œº‚ÇÅ (–≤–µ—Ä—Ö–Ω–µ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ)': mu1,
            'Œº‚ÇÇ (–Ω–∏–∂–Ω–µ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ)': mu2,
            'Œº‚ÇÉ (–∑–æ–Ω–∞ –ø–µ—Ä–µ–ø–∞–¥–∞)': `2.0 (max ${mu3_max})`,
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–ü–æ–∫—Ä—ã—Ç–∏–µ —Å –ø–µ—Ä–µ–ø–∞–¥–æ–º –≤—ã—Å–æ—Ç—ã –ø–æ —Å—Ö–µ–º–µ –ë.8 (–≤–∞—Ä–∏–∞–Ω—Ç 1). h=${h}–º, l1=${l1}–º, l2=${l2}–º. ` +
                       `–†–∞—Å—á–µ—Ç –ø–æ —Ñ–æ—Ä–º—É–ª–µ –ë.5 –°–ü 20.13330.2016: Œº‚ÇÅ = min(2h/l1, 2) = ${mu1}, Œº‚ÇÇ = min(2h/l2, 2) = ${mu2}, ` +
                       `Œº‚ÇÉ = 2.0 (–Ω–µ –±–æ–ª–µ–µ 2h/‚àöS‚ÇÄ = ${mu3_max})`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏'
        },
        '–°—Ö–µ–º–∞ –ë.8 (–≤–∞—Ä–∏–∞–Ω—Ç 2)': {
            'Œº‚ÇÅ (–≤–µ—Ä—Ö–Ω–µ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ)': mu1,
            'Œº‚ÇÇ (–Ω–∏–∂–Ω–µ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ)': mu2,
            'Œº‚ÇÉ (–∑–æ–Ω–∞ –ø–µ—Ä–µ–ø–∞–¥–∞)': '0.0',
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–ü–æ–∫—Ä—ã—Ç–∏–µ —Å –ø–µ—Ä–µ–ø–∞–¥–æ–º –≤—ã—Å–æ—Ç—ã –ø–æ —Å—Ö–µ–º–µ –ë.8 (–≤–∞—Ä–∏–∞–Ω—Ç 2). h=${h}–º, l1=${l1}–º, l2=${l2}–º. ` +
                       `–†–∞—Å—á–µ—Ç –ø–æ —Ñ–æ—Ä–º—É–ª–µ –ë.5 –°–ü 20.13330.2016: Œº‚ÇÅ = min(2h/l1, 2) = ${mu1}, Œº‚ÇÇ = min(2h/l2, 2) = ${mu2}, Œº‚ÇÉ = 0.0`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏'
        }
    };
}

function calculateMuForParapet(h, distance) {
    // –†–∞—Å—á–µ—Ç –ø–æ –ø.–ë.13 –°–ü 20.13330.2016
    // –±) –°—Ö–µ–º—É –Ω–∞ —Ä–∏—Å—É–Ω–∫–µ –ë.16 –¥–ª—è –ø–æ–∫—Ä—ã—Ç–∏–π —Å –ø–∞—Ä–∞–ø–µ—Ç–∞–º–∏ —Å–ª–µ–¥—É–µ—Ç –ø—Ä–∏–º–µ–Ω—è—Ç—å –ø—Ä–∏ h/S‚ÇÄ > 0,8;
    // Œº = 2h/s, –Ω–æ –Ω–µ –±–æ–ª–µ–µ 3.
    
    const s = distance;
    let mu = Math.min(2 * h / s, 3).toFixed(2);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å—Ö–µ–º—ã –ë.13
    const sg = sgValue; // S‚ÇÄ –≤ –∫–ü–∞
    const condition = h / sg > 0.8;
    
    let description = '';
    if (condition) {
        description = `–ü–∞—Ä–∞–ø–µ—Ç –ø–æ —Å—Ö–µ–º–µ –ë.13. –í—ã—Å–æ—Ç–∞ –ø–∞—Ä–∞–ø–µ—Ç–∞ h=${h}–º, —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –ø–∞—Ä–∞–ø–µ—Ç–∞ s=${s}–º. `;
        description += `–£—Å–ª–æ–≤–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è: h/S‚ÇÄ = ${h}/${sg} = ${(h/sg).toFixed(2)} > 0.8 - –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è. `;
        description += `–†–∞—Å—á–µ—Ç –ø–æ –ø.–ë.13 –±) –°–ü 20.13330.2016: Œº = min(2h/s, 3) = min(${2*h}/${s}, 3) = ${mu}`;
    } else {
        description = `–ü–∞—Ä–∞–ø–µ—Ç –ø–æ —Å—Ö–µ–º–µ –ë.13. –í—ã—Å–æ—Ç–∞ –ø–∞—Ä–∞–ø–µ—Ç–∞ h=${h}–º, —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –ø–∞—Ä–∞–ø–µ—Ç–∞ s=${s}–º. `;
        description += `–£—Å–ª–æ–≤–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è: h/S‚ÇÄ = ${h}/${sg} = ${(h/sg).toFixed(2)} ‚â§ 0.8 - –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è. `;
        description += `–°—Ö–µ–º–∞ –ë.13 –Ω–µ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Œº = 1.0`;
        mu = '1.0';
    }
    
    return {
        '–°—Ö–µ–º–∞ –ë.13': {
            'Œº': mu,
            '–æ–ø–∏—Å–∞–Ω–∏–µ': description,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –Ω–∞–≥—Ä—É–∑–∫–∏ —É –ø–∞—Ä–∞–ø–µ—Ç–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ –ø.–ë.13 –°–ü 20.13330.2016'
        }
    };
}

function calculateMuForConeRoof(angle) {
    const mu = calculateBaseMu(angle);
    
    return {
        '–°—Ö–µ–º–∞ –ë.15': {
            'Œº': mu.toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–ö–æ–Ω–∏—á–µ—Å–∫–æ–µ –∫—Ä—É–≥–æ–≤–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.15. –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ –æ–±—Ä–∞–∑—É—é—â–µ–π Œ± = ${angle}¬∞. –†–∞—Å—á–µ—Ç –ø–æ —Ç–∞–±–ª–∏—Ü–µ –ë.3 –°–ü 20.13330.2016: Œº = ${mu.toFixed(2)}`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è'
        }
    };
}

function calculateMuForPointedRoof(angle) {
    const mu = calculateBaseMu(angle);
    
    return {
        '–°—Ö–µ–º–∞ –ë.2 (–≤–∞—Ä–∏–∞–Ω—Ç 1)': {
            'Œº': mu.toFixed(2),
            '–æ–ø–∏—Å–∞–Ω–∏–µ': `–°—Ç—Ä–µ–ª—å—á–∞—Ç–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Å—Ö–µ–º–µ –ë.2 (–≤–∞—Ä–∏–∞–Ω—Ç 1). –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ ${angle}¬∞. –†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ–≥–ª–∞—Å–Ω–æ –ø.–ë.2 –°–ü 20.13330.2016`,
            '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è'
        }
    };
}

// –ë–ê–ó–û–í–´–ï –§–£–ù–ö–¶–ò–ò –†–ê–°–ß–ï–¢–ê
function calculateBaseMu(angle) {
    // –°–æ–≥–ª–∞—Å–Ω–æ —Ç–∞–±–ª–∏—Ü–µ –ë.1 –°–ü 20.13330.2016
    if (angle <= 25) return 1.0;
    if (angle >= 60) return 0.0;
    return (60 - angle) / 35;
}

function calculateArchMu(ratio) {
    // –°–æ–≥–ª–∞—Å–Ω–æ –ø.–ë.2 –°–ü 20.13330.2016
    if (ratio <= 0.1) return 1.0;
    if (ratio >= 0.4) return 0.0;
    return 1.25 * (1 - 2.5 * ratio);
}

// –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –°–•–ï–ú Œº
function displayMuSchemes(muResults) {
    const container = document.getElementById('muSchemesContainer');
    if (!container) return;
    
    let html = '<div class="mu-scheme"><h4>üìê –°—Ö–µ–º—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è Œº:</h4>';
    
    Object.keys(muResults).forEach(scheme => {
        const schemeData = muResults[scheme];
        
        html += `<div class="scheme-description">`;
        html += `<h5>${scheme}</h5>`;
        html += `<p><strong>üìù –û–ø–∏—Å–∞–Ω–∏–µ:</strong> ${schemeData.–æ–ø–∏—Å–∞–Ω–∏–µ}</p>`;
        html += `<p><strong>üéØ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:</strong> ${schemeData.–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ}</p>`;
        html += `<div class="zone-calculation">`;
        
        // –ù–∞—Ö–æ–¥–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ Œº –¥–ª—è —ç—Ç–æ–π —Å—Ö–µ–º—ã
        let maxMuInScheme = 0;
        Object.keys(schemeData).forEach(key => {
            if (!['–æ–ø–∏—Å–∞–Ω–∏–µ', '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ', 'description', 'application'].includes(key)) {
                const value = schemeData[key];
                const muVal = parseFloat(value) || 0;
                if (muVal > maxMuInScheme) maxMuInScheme = muVal;
                html += `<div class="mu-zone"><strong>${key}:</strong> ${value}</div>`;
            }
        });
        
        html += `<div class="mu-zone" style="background:#2c3e50;color:white;"><strong>–ú–∞–∫—Å. Œº –≤ —Å—Ö–µ–º–µ:</strong> ${maxMuInScheme.toFixed(2)}</div>`;
        html += `</div></div>`;
    });
    
    html += '</div>';
    container.innerHTML = html;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ Œº
    updateGlobalMuValue(muResults);
}

// –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è Œº
function updateGlobalMuValue(muResults) {
    let maxMu = 0;
    
    Object.keys(muResults).forEach(scheme => {
        const schemeData = muResults[scheme];
        Object.keys(schemeData).forEach(key => {
            if (!['–æ–ø–∏—Å–∞–Ω–∏–µ', '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ', 'description', 'application'].includes(key)) {
                const value = schemeData[key];
                // –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Å—Ç—Ä–æ–∫–∏ (–º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–æ–ø. —Ç–µ–∫—Å—Ç)
                const muMatch = value.toString().match(/(\d+\.?\d*)/);
                if (muMatch) {
                    const muVal = parseFloat(muMatch[1]);
                    if (muVal > maxMu) maxMu = muVal;
                }
            }
        });
    });
    
    muValue = maxMu > 0 ? maxMu : 1.0;
    
    const muValueElement = document.getElementById('muValue');
    if (muValueElement) {
        muValueElement.textContent = `–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ Œº: ${muValue.toFixed(2)}`;
    }
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —É—á–µ—Ç–∞ –≥–æ—Ä–Ω—ã—Ö —Ä–∞–π–æ–Ω–æ–≤
function toggleMountainArea() {
    isMountainArea = document.getElementById('mountainArea').checked;
    document.getElementById('mountainCalculation').style.display = isMountainArea ? 'block' : 'none';
    
    if (!isMountainArea) {
        kbValue = 1.0;
        document.getElementById('kbDisplay').innerHTML = '';
    } else {
        updateKb();
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã—Å–æ—Ç–Ω–æ–≥–æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ k_b
function updateKb() {
    if (!isMountainArea) return;
    
    altitude = parseFloat(document.getElementById('altitude').value) || 500;
    mountainRegion = document.getElementById('mountainRegion').value;
    
    let kb = 1.0;
    let calculationDetails = '';
    
    const regionCoefficients = {
        'dagestan': 0.001,
        'krasnodar_adler': 0.009,
        'krasnodar_apsheron': 0.008,
        'krasnodar_tuapse': 0.005,
        'krasnodar_other': 0.003,
        'stavropol': 0.001,
        'evenkia': 0.001,
        'krasnoyarsk_kuznetsk': 0.0068,
        'krasnoyarsk_sayan': 0.0063,
        'krasnoyarsk_north': 0.0028,
        'buryatia_khamar': 0.002,
        'buryatia_baikal': 0.0046,
        'yakutia_aldan': 0.002,
        'crimea_yayla': 0.004,
        'crimea_south': 0.002
    };
    
    if (mountainRegion && regionCoefficients[mountainRegion]) {
        const coefficient = regionCoefficients[mountainRegion];
        kb = 1 + coefficient * altitude;
        calculationDetails = `k_b = 1 + ${coefficient} √ó ${altitude} = ${kb.toFixed(3)}`;
        
        document.getElementById('kbCalculationDetails').innerHTML = `
            <div class="detailed-explanation">
                <strong>–†–∞—Å—á–µ—Ç –≤—ã—Å–æ—Ç–Ω–æ–≥–æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞:</strong><br>
                ${calculationDetails}
            </div>
        `;
        
        document.getElementById('kbDisplay').innerHTML = `
            <div class="kb-display">
                –í—ã—Å–æ—Ç–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç k_b = ${kb.toFixed(3)}
            </div>
        `;
    } else {
        calculationDetails = 'k_b = 1.0 (—Ä–∞–π–æ–Ω –Ω–µ –≤—ã–±—Ä–∞–Ω)';
        document.getElementById('kbCalculationDetails').innerHTML = `
            <div class="warning">
                ‚ö†Ô∏è –í—ã—Å–æ—Ç–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –Ω–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω. –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–Ω—ã–π —Ä–∞–π–æ–Ω –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞.
            </div>
        `;
        document.getElementById('kbDisplay').innerHTML = '';
    }
    
    kbValue = kb;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞
function calculate() {
    let Sg, Ce, Ct;
    let SgSource = '', CeSource = '', CtSource = '';
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ –ø–æ–∫—Ä—ã—Ç–∏—è
    const dimMin = parseFloat(document.getElementById('dimMin').value) || 50;
    const dimMax = parseFloat(document.getElementById('dimMax').value) || 50;
    if (dimMin > dimMax) {
        alert('‚ùå –û—à–∏–±–∫–∞: –ù–∞–∏–º–µ–Ω—å—à–∏–π —Ä–∞–∑–º–µ—Ä –ø–æ–∫—Ä—ã—Ç–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω–∞–∏–±–æ–ª—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —à–∞–≥–µ 2.');
        showStep(2);
        return;
    }
    
    // Sg
    const sgMethod = document.querySelector('input[name="sgMethod"]:checked').value;
    if (sgMethod === 'manual') {
        Sg = parseFloat(document.getElementById('sgManual').value) || 1.5;
        SgSource = '–†—É—á–Ω–æ–π –≤–≤–æ–¥';
    } else {
        if (document.querySelector('input[name="spMethod"]:checked').value === 'city') {
            const citySelect = document.getElementById('citySelect');
            const district = citySelect.options[citySelect.selectedIndex].getAttribute('data-district');
            Sg = sgValues[district] || 1.5;
            SgSource = `–ü–æ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–º—É –ø—É–Ω–∫—Ç—É (${document.getElementById('citySelect').value})`;
        } else {
            const district = document.getElementById('snowDistrictMap').value;
            Sg = sgValues[district] || 1.5;
            SgSource = '–ü–æ –∫–∞—Ä—Ç–µ —Å–Ω–µ–≥–æ–≤—ã—Ö —Ä–∞–π–æ–Ω–æ–≤';
        }
        const customSg = document.getElementById('customSg').value;
        if (customSg) {
            Sg = parseFloat(customSg);
            SgSource += ' (—É—Ç–æ—á–Ω–µ–Ω–æ –ø–æ –¥–∞–Ω–Ω—ã–º –†–æ—Å–≥–∏–¥—Ä–æ–º–µ—Ç–∞)';
        }
    }
    
    // Ce
    const ceMethod = document.querySelector('input[name="ceMethod"]:checked').value;
    if (ceMethod === 'manual') {
        Ce = parseFloat(document.getElementById('ceManual').value) || 1.0;
        CeSource = '–†—É—á–Ω–æ–π –≤–≤–æ–¥';
    } else {
        Ce = ceValue;
        CeSource = '–†–∞—Å—á–µ—Ç –ø–æ –°–ü 20.13330.2016';
    }
    
    // Ct
    const ctMethod = document.querySelector('input[name="ctMethod"]:checked').value;
    if (ctMethod === 'manual') {
        Ct = parseFloat(document.getElementById('ctManual').value) || 1.0;
        CtSource = '–†—É—á–Ω–æ–π –≤–≤–æ–¥';
    } else {
        Ct = ctValue;
        CtSource = '–†–∞—Å—á–µ—Ç –ø–æ –°–ü 20.13330.2016';
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ö–µ–º—ã Œº
    const type = document.getElementById('roofType').value;
    let muResults = {};
    
    if (document.querySelector('input[name="muMethod"]:checked').value === 'manual') {
        const singleMu = parseFloat(document.getElementById('muManual').value) || 1.0;
        muResults = {
            '–°—Ö–µ–º–∞ 1 (—Ä—É—á–Ω–æ–π –≤–≤–æ–¥)': {
                'Œº': singleMu.toFixed(2),
                '–æ–ø–∏—Å–∞–Ω–∏–µ': '–ó–Ω–∞—á–µ–Ω–∏–µ Œº –∑–∞–¥–∞–Ω–æ –≤—Ä—É—á–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º',
                '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—É'
            }
        };
    } else {
        switch(type) {
            case 'single_slope':
                const angleSingle = parseFloat(document.getElementById('roofAngle').value) || 0;
                muResults = calculateMuForSingleSlope(angleSingle);
                break;
            case 'pitched':
                const anglePitched = parseFloat(document.getElementById('roofAngle').value) || 0;
                muResults = calculateMuForPitchedRoof(anglePitched);
                break;
            case 'arched':
                const angleArched = parseFloat(document.getElementById('roofAngle').value) || 0;
                const ratioArched = parseFloat(document.getElementById('archRatio').value) || 0.1;
                muResults = calculateMuForArchedRoof(angleArched, ratioArched);
                break;
            case 'lantern':
                const angleLantern = parseFloat(document.getElementById('roofAngle').value) || 0;
                const heightLantern = parseFloat(document.getElementById('lanternHeight').value) || 2;
                const widthLantern = parseFloat(document.getElementById('lanternWidth').value) || 3;
                const distanceLantern = parseFloat(document.getElementById('lanternDistance').value) || 6;
                muResults = calculateMuForLanternRoof(angleLantern, heightLantern, widthLantern, distanceLantern);
                break;
            case 'shed':
                const angleShed = parseFloat(document.getElementById('roofAngle').value) || 0;
                muResults = calculateMuForShedRoof(angleShed);
                break;
            case 'multi_pitched':
                const angleMulti = parseFloat(document.getElementById('roofAngle').value) || 0;
                muResults = calculateMuForMultiPitchedRoof(angleMulti);
                break;
            case 'multi_arched':
                const angleMultiArched = parseFloat(document.getElementById('roofAngle').value) || 0;
                const ratioMultiArched = parseFloat(document.getElementById('archRatio').value) || 0.1;
                muResults = calculateMuForMultiArchedRoof(angleMultiArched, ratioMultiArched);
                break;
            case 'height_drop':
                const h = parseFloat(document.getElementById('heightDrop').value) || 2;
                const l1 = parseFloat(document.getElementById('lengthUpper').value) || 10;
                const l2 = parseFloat(document.getElementById('lengthLower').value) || 10;
                muResults = calculateMuForHeightDrop(h, l1, l2);
                break;
            case 'parapet':
                const parapetHeight = parseFloat(document.getElementById('parapetHeight').value) || 1;
                const parapetDistance = parseFloat(document.getElementById('parapetDistance').value) || 2;
                muResults = calculateMuForParapet(parapetHeight, parapetDistance);
                break;
            case 'cone':
                const coneAngle = parseFloat(document.getElementById('coneAngle').value) || 30;
                muResults = calculateMuForConeRoof(coneAngle);
                break;
            default:
                muResults = {
                    '–°—Ö–µ–º–∞ 1 (—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–∞—è)': {
                        'Œº': '1.0',
                        '–æ–ø–∏—Å–∞–Ω–∏–µ': '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é',
                        '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ': '–û–±—â–∏–π —Ä–∞—Å—á–µ—Ç'
                    }
                };
        }
    }
    
    // –†–∞—Å—á–µ—Ç –Ω–∞–≥—Ä—É–∑–æ–∫ –¥–ª—è –≤—Å–µ—Ö —Å—Ö–µ–º –∏ –∑–æ–Ω
    let allLoadResults = [];
    let calculationDetails = '';
    
    Object.keys(muResults).forEach(scheme => {
        const schemeData = muResults[scheme];
        calculationDetails += `<h4>${scheme}</h4>`;
        calculationDetails += `<div class="scheme-description">`;
        calculationDetails += `<p><strong>üìù –û–ø–∏—Å–∞–Ω–∏–µ:</strong> ${schemeData.–æ–ø–∏—Å–∞–Ω–∏–µ}</p>`;
        calculationDetails += `<p><strong>üéØ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:</strong> ${schemeData.–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ}</p>`;
        calculationDetails += `</div>`;
        
        Object.keys(schemeData).forEach(zone => {
            if (!['–æ–ø–∏—Å–∞–Ω–∏–µ', '–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ'].includes(zone)) {
                const mu = parseFloat(schemeData[zone]) || 1.0;
                const Sn = mu * Ct * Ce * Sg * kbValue;
                const Sr = 1.4 * Sn;
                
                allLoadResults.push({ scheme, zone, mu, Sn, Sr });
                
                calculationDetails += `
                    <div class="zone-calculation">
                        <div class="calculation-formula">
                            <strong>–†–∞—Å—á–µ—Ç –¥–ª—è –∑–æ–Ω—ã "${zone}":</strong><br>
                            ${zone} = ${mu.toFixed(2)}<br>
                            S_n = ${zone} √ó Ct √ó Ce √ó Sg √ó k_b = ${mu.toFixed(2)} √ó ${Ct.toFixed(2)} √ó ${Ce.toFixed(2)} √ó ${Sg} √ó ${kbValue.toFixed(3)} = ${Sn.toFixed(2)} –∫–ü–∞<br>
                            S_r = 1.4 √ó S_n = 1.4 √ó ${Sn.toFixed(2)} = ${Sr.toFixed(2)} –∫–ü–∞
                        </div>
                        <div class="load-result">
                            <strong>–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è ${zone}:</strong><br>
                            –ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ S_n = ${Sn.toFixed(2)} –∫–ü–∞<br>
                            –†–∞—Å—á–µ—Ç–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ S_r = ${Sr.toFixed(2)} –∫–ü–∞
                        </div>
                    </div>
                `;
            }
        });
    });
    
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã—Å–æ—Ç–µ —Å–Ω–µ–≥–∞ (–ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –≤ –∫–æ–Ω–µ—Ü –æ—Ç—á–µ—Ç–∞)
    const maxSn = Math.max(...allLoadResults.map(r => r.Sn));
    const snowHeight = calculateSnowHeight(maxSn);
    
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –¥–ª—è –æ—Ç—á–µ—Ç–∞
    const tempSelect = document.getElementById('januaryTemp');
    let temperatureInfo = '';
    if (tempSelect.value === 'cold') {
        temperatureInfo = `–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —è–Ω–≤–∞—Ä—è: ‚â§ -5¬∞C (—Ö–æ–ª–æ–¥–Ω–∞—è –∑–∏–º–∞)${currentCity ? ` - ${currentCity}` : ''}`;
    } else if (tempSelect.value === 'warm') {
        temperatureInfo = `–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —è–Ω–≤–∞—Ä—è: > -5¬∞C (—Ç–µ–ø–ª–∞—è –∑–∏–º–∞)${currentCity ? ` - ${currentCity}` : ''}`;
    } else {
        temperatureInfo = '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —è–Ω–≤–∞—Ä—è: –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞';
    }
    
    let reduced = '';
    const reducedLoadChecked = document.getElementById('reducedLoad').checked;
    if (reducedLoadChecked && tempSelect.value === 'cold') {
        const SnRed = 0.5 * Sg;
        reduced = `
            <h3>üìâ –ü–æ–Ω–∏–∂–µ–Ω–Ω–∞—è –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ (–ø.10.11)</h3>
            <div class="calculation-formula">
                S_n_red = 0.5 √ó S_g = 0.5 √ó ${Sg} = ${SnRed.toFixed(2)} –∫–ü–∞
            </div>
            <div class="scheme-usage">
                <strong>üéØ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–æ–Ω–∏–∂–µ–Ω–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –ø.10.11 –°–ü 20.13330.2016:</strong><br>
                ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¢–û–õ–¨–ö–û –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –¥–µ—Ñ–æ—Ä–º–∞—Ü–∏–π –∏ –ø—Ä–æ–≥–∏–±–æ–≤<br>
                ‚Ä¢ –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏<br>
                ‚Ä¢ –ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ —Ö–æ–ª–æ–¥–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–∞—Ö (t_—è–Ω–≤ ‚â§ -5¬∞C)<br>
                ‚Ä¢ –î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª–Ω—É—é –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—É—é –Ω–∞–≥—Ä—É–∑–∫—É –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –≤—ã—à–µ
            </div>
        `;
    } else if (reducedLoadChecked && tempSelect.value === 'warm') {
        reduced = '<div class="warning"><p>‚ùå –ü–æ–Ω–∏–∂–µ–Ω–Ω–∞—è —Å–Ω–µ–≥–æ–≤–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ –Ω–µ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –¥–ª—è —Ç–µ–ø–ª—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤ (t_—è–Ω–≤ > -5¬∞C) –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –ø.10.11 –°–ü 20.13330.2016!</p></div>';
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ö–µ–º—ã –∏–∑ –°–ü –≤ –æ—Ç—á–µ—Ç
    const schemeImages = {
        'single_slope': '1_–û–¥–Ω–æ—Å–∫–∞—Ç–Ω–∞—è.png',
        'pitched': '2_–î–≤—É—Å–∫–∞—Ç–Ω–∞—è.png',
        'arched': '3_–°–≤–æ–¥—á–∞—Ç–∞—è.png',
        'lantern': '5_–° —Ñ–æ–Ω–∞—Ä—è–º–∏.png',
        'shed': '7_–®–µ–¥–æ–≤—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è.png',
        'multi_pitched': '8_–ú–Ω–æ–≥–æ–ø—Ä–æ–ª—ë—Ç–Ω—ã–µ –¥–≤—É—Å–∫–∞—Ç–Ω—ã–µ.png',
        'multi_arched': '9_–ú–Ω–æ–≥–æ–ø—Ä–æ–ª—ë—Ç–Ω—ã–µ —Å–≤–æ–¥—á–∞—Ç—ã–µ.png',
        'height_drop': '11_–° –ø–µ—Ä–µ–ø–∞–¥–æ–º –≤—ã—Å–æ—Ç—ã.png',
        'parapet': '16_–ü–∞—Ä–∞–ø–µ—Ç—ã.png',
        'cone': '15_–ö–æ–Ω–∏—á–µ—Å–∫–∏–µ –∫—Ä—É–≥–æ–≤—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è.png'
    };

    const report = `
        <h3>üìù –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</h3>
        <table>
            <tr><th>–ü–∞—Ä–∞–º–µ—Ç—Ä</th><th>–ó–Ω–∞—á–µ–Ω–∏–µ</th><th>–ú–µ—Ç–æ–¥ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è</th></tr>
            <tr><td>–ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ Sg</td><td>${Sg} –∫–ü–∞</td><td>${SgSource}</td></tr>
            <tr><td>–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤–µ—Ç—Ä–∞ Ce</td><td>${Ce.toFixed(2)}</td><td>${CeSource}</td></tr>
            <tr><td>–¢–µ—Ä–º–∏—á–µ—Å–∫–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç Ct</td><td>${Ct.toFixed(2)}</td><td>${CtSource}</td></tr>
            ${isMountainArea ? `<tr><td>–í—ã—Å–æ—Ç–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç k_b</td><td>${kbValue.toFixed(3)}</td><td>–ü–æ –¢–∞–±–ª–∏—Ü–µ –ñ.1 –°–ü 20.13330.2016</td></tr>` : ''}
            <tr><td>–¢–∏–ø –ø–æ–∫—Ä—ã—Ç–∏—è</td><td>${document.getElementById('roofType').options[document.getElementById('roofType').selectedIndex].text}</td><td>-</td></tr>
            <tr><td>${temperatureInfo}</td><td></td><td></td></tr>
        </table>

        ${isMountainArea ? `
        <div class="mountain-control">
            <h3>üèîÔ∏è –£—á—ë—Ç –≤—ã—Å–æ—Ç–Ω–æ–≥–æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ –¥–ª—è –≥–æ—Ä–Ω—ã—Ö —Ä–∞–π–æ–Ω–æ–≤</h3>
            <p>–ü—Ä–∏–º–µ–Ω—ë–Ω –≤—ã—Å–æ—Ç–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç k_b = ${kbValue.toFixed(3)} –¥–ª—è ${document.getElementById('mountainRegion').options[document.getElementById('mountainRegion').selectedIndex].text}</p>
            <p>–í—ã—Å–æ—Ç–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞: ${altitude} –º –Ω–∞–¥ —É—Ä–æ–≤–Ω–µ–º –º–æ—Ä—è</p>
        </div>
        ` : ''}

        <div class="scheme-reference">
            <h3>üìê –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Å—Ö–µ–º—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–Ω–µ–≥–æ–≤–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏:</h3>
            <img src="${baseImageUrl + (schemeImages[type] || '2_–î–≤—É—Å–∫–∞—Ç–Ω–∞—è.png')}" alt="–°—Ö–µ–º–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–Ω–µ–≥–æ–≤–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏" style="max-width: 500px;" onerror="this.src='https://via.placeholder.com/400x250/3498db/ffffff?text=–°—Ö–µ–º–∞+–Ω–µ+–¥–æ—Å—Ç—É–ø–Ω–∞'">
            <p class="italic">–°—Ö–µ–º–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–Ω–µ–≥–æ–≤–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏ –ø–æ –°–ü 20.13330.2016 –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ë</p>
        </div>

        <h3>üßÆ –î–µ—Ç–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç –ø–æ —Å—Ö–µ–º–∞–º –∏ –∑–æ–Ω–∞–º:</h3>
        ${calculationDetails}

        <h3>üìä –°–≤–æ–¥–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:</h3>
        <table>
            <tr><th>–°—Ö–µ–º–∞</th><th>–ó–æ–Ω–∞/–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç</th><th>–ó–Ω–∞—á–µ–Ω–∏–µ</th><th>–ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è S_n, –∫–ü–∞</th><th>–†–∞—Å—á–µ—Ç–Ω–∞—è S_r, –∫–ü–∞</th><th>–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ</th></tr>
            ${allLoadResults.map(result => `
                <tr>
                    <td>${result.scheme}</td>
                    <td>${result.zone}</td>
                    <td>${result.mu.toFixed(2)}</td>
                    <td>${result.Sn.toFixed(2)}</td>
                    <td><strong>${result.Sr.toFixed(2)}</strong></td>
                    <td>${muResults[result.scheme].–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ}</td>
                </tr>
            `).join('')}
        </table>

        ${reduced}

        <div class="snow-height-info">
            <strong>üìè –°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</strong> –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è —Å–Ω–µ–≥–æ–≤–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ ${maxSn.toFixed(2)} –∫–ü–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—ã—Å–æ—Ç–µ —Å–Ω–µ–∂–Ω–æ–≥–æ –ø–æ–∫—Ä–æ–≤–∞ 
            –æ—Ç ${snowHeight.min} –º –¥–æ ${snowHeight.max} –º (–ø—Ä–∏ –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏ —Å–Ω–µ–≥–∞ 0.3-0.8 —Ç/–º¬≥)
        </div>

        <div class="note">
            <p><strong>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:</strong></p>
            <p>‚Ä¢ <strong>–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ü–†–û–ß–ù–û–°–¢–ò</strong> –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û–ï –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏ S_r –∏–∑ —Ç–∞–±–ª–∏—Ü—ã</p>
            <p>‚Ä¢ <strong>–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –î–ï–§–û–†–ú–ê–¶–ò–ô</strong> –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—É—é –Ω–∞–≥—Ä—É–∑–∫—É S_n —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∑–æ–Ω—ã</p>
            <p>‚Ä¢ <strong>–î–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π</strong> –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∫–∞–∂–¥—É—é –∑–æ–Ω—É –æ—Ç–¥–µ–ª—å–Ω–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–∞–∑–Ω—ã—Ö –Ω–∞–≥—Ä—É–∑–æ–∫</p>
            <p>‚Ä¢ <strong>–î–ª—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π</strong> –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º</p>
            <p>‚Ä¢ <strong>–ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å—Ö–µ–º</strong> —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –∫–∞–∂–¥—É—é –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–æ–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∏–µ</p>
        </div>

        <div class="warning">
            <p><strong>‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è:</strong></p>
            <p>‚Ä¢ –î–∞–Ω–Ω—ã–π —Ä–∞—Å—á–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –°–ü 20.13330.2016</p>
            <p>‚Ä¢ –î–ª—è –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º —É—á–µ—Ç –≤—Å–µ—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤</p>
            <p>‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤—â–∏–∫–æ–º</p>
            <p>‚Ä¢ –ù–µ—Å—É—â–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞ –Ω–∞ –≤—Å–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –Ω–∞–≥—Ä—É–∑–æ–∫</p>
        </div>
    `;
    
    document.getElementById('reportContent').innerHTML = report;
    document.getElementById('report').style.display = 'block';
    document.getElementById('report').scrollIntoView({ behavior: 'smooth' });
}

function calculateSnowHeight(snowLoad) {
    const minHeight = (snowLoad / 8).toFixed(2);
    const maxHeight = (snowLoad / 3).toFixed(2);
    return { min: minHeight, max: maxHeight };
}

function resetCalculator() {
    location.reload();
}

function saveAsPDF() {
    window.print();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    toggleSgMethod();
    toggleCeMethod();
    toggleCtMethod();
    toggleMuMethod();
    showSpMethod('city');
    showParams();
    updateTemperatureInfo();
    updateCe();
    updateCt();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã
    updateMapSrc();
});
